{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/common/Search.jsx","webpack:///./src/components/common/NavBar.jsx","webpack:///./src/components/header.jsx","webpack:///./src/components/footer.jsx","webpack:///./src/components/seo.jsx","webpack:///./src/components/layout.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Search","allPosts","_useState","useState","keyword","setKeyword","_useState2","searchResults","setSearchResults","useEffect","length","getPosts","filter","post","includes","react_default","Fragment","className","placeholder","autoComplete","value","onChange","e","target","onBlur","map","key","id","gatsby_browser_entry","to","link","date","excerpt","NavBar","_ref$allPosts","_ref$active","active","style","position","cx","item--current","href","common_Search","Header","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","backgroundImage","display","alignItems","site","siteMetadata","description","_public_static_d_3978990474_json__WEBPACK_IMPORTED_MODULE_0__","Footer","author","_public_static_d_2388669901_json__WEBPACK_IMPORTED_MODULE_0__","Date","getFullYear","SEO","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","join","defaultProps","array","arrayOf","_footer__WEBPACK_IMPORTED_MODULE_3__","_common_NavBar__WEBPACK_IMPORTED_MODULE_4__","_header__WEBPACK_IMPORTED_MODULE_5__","Layout","isHome","node"],"mappings":"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","file":"component---src-pages-404-js-dc9e5b50f9335e696df2.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'gatsby'\n\nconst Search = ({ allPosts }) => {\n\n    const [keyword, setKeyword] = useState('')\n    const [searchResults, setSearchResults] = useState([])\n\n    useEffect(() => {\n        if (keyword.length > 2) {\n            const getPosts = allPosts.filter(post => post.title.includes(keyword))\n            setSearchResults(getPosts)\n        } else {\n            setSearchResults([])\n        }\n    }, [keyword])\n\n    return (\n        <>\n            <input\n                className=\"search-input\"\n                placeholder=\"Search\"\n                autoComplete=\"off\"\n                value={keyword}\n                onChange={e => setKeyword(e.target.value)}\n                onBlur={() => {\n                    setKeyword('')\n                }}\n            />\n            <ul className=\"search--results\" >\n                {searchResults.map(post =>\n                    <li\n                        key={post.id}\n                        className=\"search--result\"\n                    >\n                        <Link to={post.link}>\n                            <article className=\"search--result-article\">\n                                <div className=\"search--result-article-title\">\n                                    <h3>{post.title}</h3>\n                                    <span className=\"date\">{post.date}</span>\n                                </div>\n                                <p>{post.excerpt}</p>\n                            </article>\n                        </Link>\n                    </li>\n                )}\n            </ul>\n        </>\n    )\n}\n\nexport default Search","import React from 'react'\nimport { Link } from 'gatsby';\nimport cx from 'classnames'\n\nimport Search from './Search'\n\nconst NavBar = ({ allPosts = [], active = \"\" }) => {\n    return (\n        <header className=\"header\">\n            <div className=\"container\">\n                <Link className=\"logo\" to=\"/\">\n                    DevLog\n                </Link>\n                <ul className=\"list list--nav\" style={{\n                    position: \"relative\"\n                }}>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"home\" })}>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"about\" })}>\n                        <Link to=\"/about\">About</Link>\n                    </li>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"category\" })}>\n                        <Link to=\"/category\">Category</Link>\n                    </li>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"tags\" })}>\n                        <Link to=\"/tags\">Tags</Link>\n                    </li>\n                    <li className=\"item item--nav\">\n                        <a href=\"/TIL\">TIL</a>\n                    </li>\n                    <li className=\"item  item--nav\">\n                        <Search\n                            allPosts={allPosts}\n                        />\n                    </li>\n                </ul>\n            </div>\n        </header>\n    )\n}\n\nexport default NavBar","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\n\nconst Header = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => {\n      return (\n        <div\n          className=\"feature\"\n          style={{\n            backgroundImage: \"url(../images/header.jpeg)\",\n            display: \"flex\",\n            alignItems: \"center\"\n          }}\n        >\n          <div className=\"container typeset\" >\n            <h2 id=\"alembic\">{data.site.siteMetadata.title}</h2>\n            <p>{data.site.siteMetadata.description}</p>\n          </div>\n        </div>\n      )\n    }}\n  />\n)\n\nexport default Header\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst Footer = () => {\n\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    author\n                }\n            }\n        }\n    `)\n\n    const author = data.site.siteMetadata.author\n    return (\n        <footer className=\"footer\">\n            <div className=\"container\">\n                <div className=\"copyright typeset\">\n                    <small className=\"small\">© {new Date().getFullYear()}, Built with</small>\n                </div>\n                <nav className=\"nav  nav--footer\">\n                    <ul className=\"list list-nav\">\n                        <li className=\"item  item--nav\">\n                            {author}\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"../styles/main.scss\"\n\nimport Footer from \"./footer\";\nimport NavBar from \"./common/NavBar\";\nimport Header from \"./header\";\n\nconst Layout = ({ children, isHome }) => (\n  <>\n    <NavBar\n      active=\"home\"\n    />\n    {isHome && <Header />}\n    {/* <Header\n        siteTitle={data.site.siteMetadata.title}\n        siteDescription={data.site.siteMetadata.description}\n      /> */}\n    <main className=\"main container\">{children}</main>\n    <Footer />\n  </>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}