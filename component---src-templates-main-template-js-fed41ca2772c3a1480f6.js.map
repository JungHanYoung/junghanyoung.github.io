{"version":3,"sources":["webpack:///./src/templates/main-template.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./src/context/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/common/Search.jsx","webpack:///./src/components/common/NavBar.jsx","webpack:///./node_modules/classnames/index.js","webpack:///./src/components/header.jsx","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/components/category/Index.jsx","webpack:///./src/components/post-card.jsx","webpack:///./src/components/common/Pagination.jsx","webpack:///./src/components/common/Footer.jsx","webpack:///./src/components/common/Layout.jsx","webpack:///./src/components/common/PostList.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_common_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_common_PostList__WEBPACK_IMPORTED_MODULE_2__","_context__WEBPACK_IMPORTED_MODULE_3__","MainTemplate","_ref","data","pageContext","location","allPosts","allMarkdownRemark","edges","map","edge","id","node","title","frontmatter","category","date","excerpt","link","fields","slug","numPages","currentPage","paginationInfo","isFirst","isLast","prevPage","nextPage","a","createElement","Provider","value","isHome","posts","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","createHTML","url","this","PaginationContext","LocationContext","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Search","_useState","useState","keyword","setKeyword","_useState2","searchResults","setSearchResults","useEffect","length","getPosts","filter","post","includes","react_default","Fragment","className","placeholder","autoComplete","onChange","e","target","onBlur","key","gatsby_browser_entry","to","NavBar","_ref$allPosts","_ref$active","active","style","position","cx","item--current","href","common_Search","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","push","Array","isArray","inner","apply","call","join","undefined","Header","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","backgroundImage","display","alignItems","site","siteMetadata","description","_public_static_d_3978990474_json__WEBPACK_IMPORTED_MODULE_0__","$export","fails","defined","quot","tag","attribute","S","String","p1","replace","NAME","exec","O","P","F","test","toLowerCase","split","gatsby__WEBPACK_IMPORTED_MODULE_1__","Index","_ref$categories","categories","borderRight","PostCard","_ref$category","_ref$date","Date","toUTCString","gatsby__WEBPACK_IMPORTED_MODULE_3__","_context__WEBPACK_IMPORTED_MODULE_1__","Pagination","_React$useContext","useContext","Footer","getFullYear","Layout","requireIndex","console","log","page","reduce","acc","cur","concat","header","common_Footer","_3270543025","arrayOf","bool","PostList","_ref$posts","_ref$title","_post_card__WEBPACK_IMPORTED_MODULE_3__","_Pagination__WEBPACK_IMPORTED_MODULE_4__"],"mappings":"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","file":"component---src-templates-main-template-js-fed41ca2772c3a1480f6.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/common/Layout'\nimport PostList from '../components/common/PostList'\nimport { PaginationContext, LocationContext } from '../context';\n// import PostList from '../components/post-list'\n\n// index.html\nconst MainTemplate = ({ data, pageContext, location }) => {\n\n\n    const allPosts = data.allMarkdownRemark.edges.map(edge => ({\n        id: edge.node.id,\n        title: edge.node.frontmatter.title,\n        category: edge.node.frontmatter.category,\n        date: edge.node.frontmatter.date,\n        excerpt: edge.node.excerpt,\n        link: edge.node.fields.slug\n    }))\n\n    const {\n        numPages,\n        currentPage\n    } = pageContext\n\n    const isFirst = currentPage === 1;\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? `/` : `/${currentPage - 1}`\n    const nextPage = `/${currentPage + 1}`\n    const paginationInfo = {\n        isFirst,\n        isLast,\n        prevPage,\n        nextPage,\n        currentPage,\n        numPages\n    }\n\n    return (\n        <LocationContext.Provider value={location}>\n            <PaginationContext.Provider value={paginationInfo}>\n                <Layout\n                    isHome\n                    allPosts={allPosts}\n                >\n                    <PostList\n                        posts={allPosts}\n                        title=\"All Posts\"\n                    />\n                </Layout>\n            </PaginationContext.Provider>\n        </LocationContext.Provider>\n    )\n}\n\nexport const query = graphql`\n    query allPostQuery(\n        $limit: Int!\n        $skip: Int!\n    ) {\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n            limit: $limit,\n            skip: $skip    \n        ) {\n            edges {\n                node {\n                    id\n                    excerpt(pruneLength: 70)\n                    frontmatter {\n                        title\n                        date(formatString: \"YYYY년 MM월 DD일\")\n                        category\n                        # thumbnail {\n                        #     childImageSharp {\n                        #         fixed(width: 265, height: 150) {\n                        #             ...GatsbyImageSharpFixed\n                        #         }\n                        #     }\n                        # }\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport default MainTemplate","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","import { createContext } from 'react'\n\nexport const PaginationContext = createContext();\n\nexport const LocationContext = createContext();","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'gatsby'\n\nconst Search = ({ allPosts }) => {\n\n    const [keyword, setKeyword] = useState('')\n    const [searchResults, setSearchResults] = useState([])\n\n    useEffect(() => {\n        if (keyword.length > 2) {\n            const getPosts = allPosts.filter(post => post.title.includes(keyword))\n            setSearchResults(getPosts)\n        } else {\n            setSearchResults([])\n        }\n    }, [keyword])\n\n    return (\n        <>\n            <input\n                className=\"search-input\"\n                placeholder=\"Search\"\n                autoComplete=\"off\"\n                value={keyword}\n                onChange={e => setKeyword(e.target.value)}\n                onBlur={() => {\n                    setKeyword('')\n                }}\n            />\n            <ul className=\"search--results\" >\n                {searchResults.map(post =>\n                    <li\n                        key={post.id}\n                        className=\"search--result\"\n                    >\n                        <Link to={post.link}>\n                            <article className=\"search--result-article\">\n                                <div className=\"search--result-article-title\">\n                                    <h3>{post.title}</h3>\n                                    <span className=\"date\">{post.date}</span>\n                                </div>\n                                <p>{post.excerpt}</p>\n                            </article>\n                        </Link>\n                    </li>\n                )}\n            </ul>\n        </>\n    )\n}\n\nexport default Search","import React from 'react'\nimport { Link } from 'gatsby';\nimport cx from 'classnames'\n\nimport Search from './Search'\n\nconst NavBar = ({ allPosts = [], active = \"\" }) => {\n    return (\n        <header className=\"header\">\n            <div className=\"container\">\n                <Link className=\"logo\" to=\"/\">\n                    DevLog\n                </Link>\n                <ul className=\"list list--nav\" style={{\n                    position: \"relative\"\n                }}>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"home\" })}>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"about\" })}>\n                        <Link to=\"/about\">About</Link>\n                    </li>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"category\" })}>\n                        <Link to=\"/category\">Category</Link>\n                    </li>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"tags\" })}>\n                        <Link to=\"/tags\">Tags</Link>\n                    </li>\n                    <li className=\"item item--nav\">\n                        <a href=\"/TIL\">TIL</a>\n                    </li>\n                    <li className=\"item  item--nav\">\n                        <Search\n                            allPosts={allPosts}\n                        />\n                    </li>\n                </ul>\n            </div>\n        </header>\n    )\n}\n\nexport default NavBar","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\n\nconst Header = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => {\n      return (\n        <div\n          className=\"feature\"\n          style={{\n            backgroundImage: \"url(../images/header.jpeg)\",\n            display: \"flex\",\n            alignItems: \"center\"\n          }}\n        >\n          <div className=\"container typeset\" >\n            <h2 id=\"alembic\">{data.site.siteMetadata.title}</h2>\n            <p>{data.site.siteMetadata.description}</p>\n          </div>\n        </div>\n      )\n    }}\n  />\n)\n\nexport default Header\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import React from 'react'\nimport { Link } from 'gatsby';\n\nconst Index = ({ categories = [\"TIL\"] }) => {\n    return (\n        <aside className=\"aside typeset aside--left\" style={{ borderRight: \"1px solid #a8adac\" }}>\n            <section className=\"section section--category-index\">\n                <h3>Index</h3>\n                <nav className=\"nav  nav--categories\">\n                    <ul className=\"list  list--categories\">\n                        {categories.map(category =>\n                            category === \"general\" ?\n                                <li key={`category__link-${category}`} className=\"item  item--category\">\n                                    <Link to={`/category`}>{category}</Link>\n                                </li> :\n                                <li key={`category__link-${category}`} className=\"item  item--category\">\n                                    <Link to={`/category/${category}`}>{category}</Link>\n                                </li>\n                        )}\n                    </ul>\n                </nav>\n            </section>\n        </aside>\n    )\n}\n\nexport default Index","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\n\nconst PostCard = ({ title, category = \"general\", date = new Date().toUTCString(), excerpt, link }) => {\n    return (\n        <li className=\"item  item--post\">\n            <article className=\"article  article--post\">\n                <Link to={link}>\n                    <h2>{title}</h2>\n                </Link>\n                <small className=\"small  post-meta\">\n                    <span className=\"label  label--category\">\n                        {category ?\n                            <Link to={`/category/${category}`}>{category}</Link>\n                            :\n                            <Link to={`/category`}>general</Link>\n                        }\n                    </span>\n                    &nbsp; &nbsp;\n                        <span className=\"time\">{date}</span>\n                </small>\n                <p>{excerpt}</p>\n            </article>\n        </li>\n    )\n}\n\nPostCard.propTypes = {\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string,\n    date: PropTypes.string,\n    excerpt: PropTypes.string,\n    link: PropTypes.string.isRequired\n}\n\nexport default PostCard","import React from 'react'\n\nimport { PaginationContext } from '../../context'\nimport { Link } from 'gatsby';\n\nconst Pagination = () => {\n\n    const {\n        isFirst,\n        isLast,\n        prevPage,\n        nextPage,\n        currentPage,\n        numPages\n    } = React.useContext(PaginationContext)\n\n    return (\n        <nav className=\"nav  nav--paginator\">\n            {isFirst ?\n                <span className=\"pagination  pagination--previous\">Previous</span>\n                : <Link to={prevPage} className=\"pagination  pagination--previous\">Previous</Link>\n            }\n            <span className=\"pagination  pagination--counter\">{`Page: ${currentPage} of ${numPages}`}</span>\n            {isLast ?\n                <span className=\"pagination  pagination--next\">Next</span>\n                : <Link to={nextPage} className=\"pagination  pagination--next\">Next</Link>\n            }\n        </nav>\n    )\n}\n\nexport default Pagination","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <div className=\"container\">\n                <div className=\"copyright typeset\">\n                    <small className=\"small\">© {new Date().getFullYear()}, Built with</small>\n                </div>\n                <nav className=\"nav  nav--footer\">\n                    <ul className=\"list list-nav\">\n                        <li className=\"item  item--nav\">\n                            JeongHanYoung\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types'\n\n// component \nimport NavBar from './NavBar'\nimport Footer from './Footer'\nimport Index from '../category/Index';\nimport Header from '../header';\nimport { LocationContext } from '../../context';\n\nconst Layout = ({ children, requireIndex, isHome, allPosts }) => {\n\n    const location = React.useContext(LocationContext);\n    console.log(location)\n    const page = location.pathname.split('/')[1]\n\n    if (allPosts) {\n        const categories = allPosts.reduce(\n            (acc, cur) =>\n                acc.includes(cur.category) ? acc : [...acc, cur.category]\n            , [])\n        return (\n            <>\n                <NavBar\n                    allPosts={allPosts}\n                    active={isHome ? \"home\" : page}\n                />\n                {isHome && <Header />}\n                <main className=\"main container\">\n                    {requireIndex &&\n                        <Index\n                            categories={categories}\n                        />}\n                    {children}\n                </main>\n                <Footer />\n            </>\n        )\n    } else {\n        return (\n            <StaticQuery\n                query={graphql`\n                query {\n                    allMarkdownRemark {\n                        edges {\n                            node {\n                                id\n                                frontmatter {\n                                    title\n                                    category\n                                }\n                                excerpt(pruneLength: 70)\n                                fields {\n                                    slug\n                                }\n                            }\n                        }\n                    }\n                }\n            `}\n                render={data => {\n\n                    const allPosts = data.allMarkdownRemark.edges.map(edge => ({\n                        id: edge.node.id,\n                        title: edge.node.frontmatter.title,\n                        category: edge.node.frontmatter.category,\n                        date: edge.node.frontmatter.date,\n                        link: edge.node.fields.slug,\n                        excerpt: edge.node.excerpt\n                    }))\n                    const categories = allPosts.reduce(\n                        (acc, cur) =>\n                            acc.includes(cur.category) ? acc : [...acc, cur.category]\n                        , [])\n                    return <>\n                        <NavBar allPosts={allPosts} />\n                        {isHome && <Header />}\n                        <main className=\"main container\">\n                            {requireIndex &&\n                                <Index\n                                    categories={categories}\n                                />}\n                            {children}\n                        </main>\n                        <Footer />\n                    </>\n                }}\n            />\n        )\n    }\n}\n\n//children, requireIndex, isHome\nLayout.propTypes = {\n    allPosts: PropTypes.arrayOf(PropTypes.shape({\n\n    })),\n    requireIndex: PropTypes.bool,\n    isHome: PropTypes.bool,\n    children: PropTypes.node\n}\n\nexport default Layout","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PostCard from '../post-card';\nimport Pagination from './Pagination';\n\nconst propTypes = {\n    children: PropTypes.node,\n    posts: PropTypes.arrayOf(\n        PropTypes.shape({})\n    ),\n    title: PropTypes.string\n}\n\n\nconst PostList = ({ posts = [], title = \"POST LIST\" }) => {\n    return (\n        <div\n            className=\"content typeset\"\n        >\n            <article className=\"article  article--page  typeset\">\n                <h2>{title}</h2>\n            </article>\n            <ul className=\"list  list--posts\">\n                {posts.map(post =>\n                    <PostCard\n                        key={post.id}\n                        {...post}\n                    />\n                )}\n            </ul>\n            <Pagination />\n        </div>\n    )\n}\n\nPostList.propTypes = propTypes\n\nexport default PostList"],"sourceRoot":""}