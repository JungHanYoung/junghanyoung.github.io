{"version":3,"sources":["webpack:///./src/components/post-card.jsx","webpack:///./src/components/post-list.jsx","webpack:///./src/templates/main-template.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.jsx","webpack:///./src/components/footer.jsx","webpack:///./src/components/layout.jsx"],"names":["PostCard","_ref","title","_ref$category","category","_ref$date","date","Date","toUTCString","excerpt","slug","react_default","a","createElement","className","gatsby_browser_entry","to","href","propTypes","PropTypes","string","isRequired","PostList","posts","map","_ref2","node","post_card","key","id","frontmatter","fields","array","__webpack_require__","d","__webpack_exports__","query","MainTemplate","data","allMarkdownRemark","edges","layout","post_list","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","object","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","siteDescription","style","backgroundImage","defaultProps","Footer","getFullYear","Layout","Fragment","header","site","siteMetadata","description","footer","_2328579951"],"mappings":"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","file":"component---src-templates-main-template-js-48dde8c9d3a2a58e5ec2.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\n\nconst PostCard = ({ title, category = \"general\", date = new Date().toUTCString(), excerpt, slug }) => {\n    return (\n        <li className=\"item  item--post\">\n            <Link to={slug}>\n                <article className=\"article  article--post\">\n                    <h2>{title}</h2>\n                    <small className=\"small  post-meta\">\n                        <span className=\"label  label--category\">\n                            <span href=\"/categories/#general\">{category}</span>\n                        </span>\n                        &nbsp; &nbsp;\n                        <span className=\"time\">{date}</span>\n                    </small>\n                    <p>{excerpt}</p>\n                </article>\n            </Link>\n        </li>\n    )\n}\n\nPostCard.propTypes = {\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string,\n    date: PropTypes.string,\n    excerpt: PropTypes.string,\n    slug: PropTypes.string.isRequired\n}\n\nexport default PostCard","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport PostCard from './post-card'\n\nconst PostList = ({ posts }) => {\n    return (\n        <div className=\"content\">\n            <article className=\"article article--page  typeset\">\n                <h1>All Posts</h1>\n            </article>\n            <section className=\"section  typeset\">\n                <ul className=\"list  list--posts\">\n                    {posts.map(({ node }) =>\n                        <PostCard\n                            key={node.id}\n                            title={node.frontmatter.title}\n                            date={node.frontmatter.date}\n                            category={node.frontmatter.category}\n                            excerpt={node.excerpt}\n                            slug={node.fields.slug}\n                        />)\n                    }\n                </ul>\n            </section>\n        </div>\n    )\n}\n\nPostList.propTypes = {\n    posts: PropTypes.array\n}\n\nexport default PostList","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport PostList from '../components/post-list'\n\nconst MainTemplate = ({ data }) => {\n\n    const posts = data.allMarkdownRemark.edges\n    return (\n        <Layout>\n            <PostList posts={posts} />\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n    query allPostQuery {\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n            edges {\n                node {\n                    id\n                    excerpt(pruneLength: 70)\n                    frontmatter {\n                        title\n                        date(formatString: \"YYYY년 MM월 DD일\")\n                        category\n                        # thumbnail {\n                        #     childImageSharp {\n                        #         fixed(width: 265, height: 150) {\n                        #             ...GatsbyImageSharpFixed\n                        #         }\n                        #     }\n                        # }\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport default MainTemplate","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle, siteDescription }) => (\n  <header\n    className=\"header\"\n  >\n    <div\n      className=\"container\"\n    >\n      <Link\n        to=\"/\"\n        className=\"logo\"\n      >\n        hello\n      </Link>\n      <nav className=\"nav nav--header\">\n        <ul className=\"list list--nav\">\n          <li className=\"item item--nav item--current\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li className=\"item item--nav\">\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li className=\"item item--nav\">\n            <Link to=\"/category\">Category</Link>\n          </li>\n          <li className=\"item item--nav\">\n            <a href=\"/TIL\">TIL</a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n    <div className=\"feature\" style={{ backgroundImage: \"url(../images/header.jpeg)\" }}>\n      <div className=\"container typeset\">\n        <h2 id=\"alembic\">{siteTitle}</h2>\n        <p>{siteDescription}</p>\n      </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\n\nconst Footer = () => {\n\n    return (\n        <footer className=\"footer\">\n            <div className=\"container\">\n                <div className=\"copyright typeset\">\n                    <small className=\"small\">© {new Date().getFullYear()}, Built with</small>\n                </div>\n                <nav className=\"nav  nav--footer\">\n                    <ul className=\"list list-nav\">\n                        <li className=\"item  item--nav\">\n                            JeongHanYoung\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport \"../styles/main.scss\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\";\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header\n          siteTitle={data.site.siteMetadata.title}\n          siteDescription={data.site.siteMetadata.description}\n        />\n        <main className=\"main container\">{children}</main>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}