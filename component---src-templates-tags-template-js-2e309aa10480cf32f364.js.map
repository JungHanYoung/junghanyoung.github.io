{"version":3,"sources":["webpack:///./src/templates/tags-template.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/context/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/common/Search.jsx","webpack:///./src/components/common/NavBar.jsx","webpack:///./src/components/header.jsx","webpack:///./src/components/category/Index.jsx","webpack:///./src/components/post-card.jsx","webpack:///./src/components/common/Pagination.jsx","webpack:///./src/components/seo.jsx","webpack:///./src/components/common/Footer.jsx","webpack:///./src/components/common/Layout.jsx","webpack:///./src/components/common/PostList.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_common_Layout__WEBPACK_IMPORTED_MODULE_2__","_components_common_PostList__WEBPACK_IMPORTED_MODULE_3__","_context__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","propTypes","data","PropTypes","shape","pageContext","location","TagTemplate","_ref","postsInTag","allMarkdownRemark","edges","map","edge","id","node","title","frontmatter","category","date","excerpt","link","fields","slug","tag","numPages","currentPage","paginationInfo","isFirst","isLast","prevPage","nextPage","console","log","a","createElement","Provider","value","posts","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","object","string","isRequired","func","m","module","exports","require","default","PaginationContext","LocationContext","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","Search","allPosts","_useState","useState","keyword","setKeyword","_useState2","searchResults","setSearchResults","useEffect","length","getPosts","filter","post","includes","react_default","Fragment","className","placeholder","autoComplete","onChange","e","target","onBlur","key","gatsby_browser_entry","to","NavBar","_ref$allPosts","_ref$active","active","style","position","cx","item--current","href","common_Search","Header","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","backgroundImage","display","alignItems","site","siteMetadata","description","_public_static_d_3978990474_json__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","Index","_ref$categories","categories","borderRight","PostCard","_ref$category","_ref$date","Date","toUTCString","gatsby__WEBPACK_IMPORTED_MODULE_3__","_context__WEBPACK_IMPORTED_MODULE_1__","Pagination","_React$useContext","useContext","SEO","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","defaultProps","array","arrayOf","Footer","getFullYear","Layout","requireIndex","isHome","page","split","reduce","acc","cur","header","common_Footer","_3270543025","bool","PostList","_ref$posts","_ref$title","_post_card__WEBPACK_IMPORTED_MODULE_3__","_Pagination__WEBPACK_IMPORTED_MODULE_4__"],"mappings":"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","file":"component---src-templates-tags-template-js-2e309aa10480cf32f364.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\n// component\nimport Layout from '../components/common/Layout'\nimport PostList from '../components/common/PostList'\n\nimport { PaginationContext, LocationContext } from '../context';\nimport SEO from '../components/seo';\n\n\nconst propTypes = {\n    data: PropTypes.shape({}),\n    pageContext: PropTypes.shape({}),\n    location: PropTypes.shape({})\n};\n\n\nconst TagTemplate = ({ data, pageContext, location }) => {\n\n    const postsInTag = data.allMarkdownRemark.edges.map(edge => ({\n        id: edge.node.id,\n        title: edge.node.frontmatter.title,\n        category: edge.node.frontmatter.category,\n        date: edge.node.frontmatter.date,\n        excerpt: edge.node.excerpt,\n        link: edge.node.fields.slug\n    }))\n    const {\n        tag,\n        numPages,\n        currentPage\n    } = pageContext\n\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? `/tags/${tag}` : `/tags/${tag}/${currentPage - 1}`\n    const nextPage = `/tags/${tag}/${currentPage + 1}`\n\n    const paginationInfo = {\n        isFirst,\n        isLast,\n        prevPage,\n        nextPage,\n        currentPage,\n        numPages\n    }\n\n    console.log('numPages', numPages)\n\n    return (\n        <LocationContext.Provider value={location}>\n            <PaginationContext.Provider value={paginationInfo}>\n                <Layout>\n                    <SEO title={`Devlog | Tag - ${tag}`} />\n                    <PostList\n                        title={`Tag - ${tag}`}\n                        posts={postsInTag}\n                    />\n                </Layout>\n            </PaginationContext.Provider>\n        </LocationContext.Provider>\n    );\n};\n\nexport const query = graphql`\nquery(\n    $tag: String\n    $limit: Int\n    $skip: Int\n) {\n    allMarkdownRemark(\n        limit: $limit\n        skip: $skip\n        sort: { fields: [frontmatter___date], order: DESC }\n        filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n        edges {\n            node {\n                id\n                fields {\n                    slug\n                }\n                frontmatter {\n                    title\n                    date(formatString: \"YYYY년 MM월 DD일\")\n                }\n                excerpt\n            }\n        }\n    }\n}\n`\n\n\nTagTemplate.propTypes = propTypes;\n\n\nexport default TagTemplate;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { createContext } from 'react'\n\nexport const PaginationContext = createContext();\n\nexport const LocationContext = createContext();","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'gatsby'\n\nconst Search = ({ allPosts }) => {\n\n    const [keyword, setKeyword] = useState('')\n    const [searchResults, setSearchResults] = useState([])\n\n    useEffect(() => {\n        if (keyword.length > 2) {\n            const getPosts = allPosts.filter(post => post.title.includes(keyword))\n            setSearchResults(getPosts)\n        } else {\n            setSearchResults([])\n        }\n    }, [keyword])\n\n    return (\n        <>\n            <input\n                className=\"search-input\"\n                placeholder=\"Search\"\n                autoComplete=\"off\"\n                value={keyword}\n                onChange={e => setKeyword(e.target.value)}\n                onBlur={() => {\n                    setKeyword('')\n                }}\n            />\n            <ul className=\"search--results\" >\n                {searchResults.map(post =>\n                    <li\n                        key={post.id}\n                        className=\"search--result\"\n                    >\n                        <Link to={post.link}>\n                            <article className=\"search--result-article\">\n                                <div className=\"search--result-article-title\">\n                                    <h3>{post.title}</h3>\n                                    <span className=\"date\">{post.date}</span>\n                                </div>\n                                <p>{post.excerpt}</p>\n                            </article>\n                        </Link>\n                    </li>\n                )}\n            </ul>\n        </>\n    )\n}\n\nexport default Search","import React from 'react'\nimport { Link } from 'gatsby';\nimport cx from 'classnames'\n\nimport Search from './Search'\n\nconst NavBar = ({ allPosts = [], active = \"\" }) => {\n    return (\n        <header className=\"header\">\n            <div className=\"container\">\n                <Link className=\"logo\" to=\"/\">\n                    DevLog\n                </Link>\n                <ul className=\"list list--nav\" style={{\n                    position: \"relative\"\n                }}>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"home\" })}>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"about\" })}>\n                        <Link to=\"/about\">About</Link>\n                    </li>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"category\" })}>\n                        <Link to=\"/category\">Category</Link>\n                    </li>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"tags\" })}>\n                        <Link to=\"/tags\">Tags</Link>\n                    </li>\n                    <li className=\"item item--nav\">\n                        <a href=\"/TIL\">TIL</a>\n                    </li>\n                    <li className=\"item  item--nav\">\n                        <Search\n                            allPosts={allPosts}\n                        />\n                    </li>\n                </ul>\n            </div>\n        </header>\n    )\n}\n\nexport default NavBar","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\n\nconst Header = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => {\n      return (\n        <div\n          className=\"feature\"\n          style={{\n            backgroundImage: \"url(../images/header.jpeg)\",\n            display: \"flex\",\n            alignItems: \"center\"\n          }}\n        >\n          <div className=\"container typeset\" >\n            <h2 id=\"alembic\">{data.site.siteMetadata.title}</h2>\n            <p>{data.site.siteMetadata.description}</p>\n          </div>\n        </div>\n      )\n    }}\n  />\n)\n\nexport default Header\n","import React from 'react'\nimport { Link } from 'gatsby';\n\nconst Index = ({ categories = [\"TIL\"] }) => {\n    return (\n        <aside className=\"aside typeset aside--left\" style={{ borderRight: \"1px solid #a8adac\" }}>\n            <section className=\"section section--category-index\">\n                <h3>Index</h3>\n                <nav className=\"nav  nav--categories\">\n                    <ul className=\"list  list--categories\">\n                        {categories.map(category =>\n                            category === \"general\" ?\n                                <li key={`category__link-${category}`} className=\"item  item--category\">\n                                    <Link to={`/category`}>{category}</Link>\n                                </li> :\n                                <li key={`category__link-${category}`} className=\"item  item--category\">\n                                    <Link to={`/category/${category}`}>{category}</Link>\n                                </li>\n                        )}\n                    </ul>\n                </nav>\n            </section>\n        </aside>\n    )\n}\n\nexport default Index","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\n\nconst PostCard = ({ title, category = \"general\", date = new Date().toUTCString(), excerpt, link }) => {\n    return (\n        <li className=\"item  item--post\">\n            <article className=\"article  article--post\">\n                <Link to={link}>\n                    <h2>{title}</h2>\n                </Link>\n                <small className=\"small  post-meta\">\n                    <span className=\"label  label--category\">\n                        {category ?\n                            <Link to={`/category/${category}`}>{category}</Link>\n                            :\n                            <Link to={`/category`}>general</Link>\n                        }\n                    </span>\n                    &nbsp; &nbsp;\n                        <span className=\"time\">{date}</span>\n                </small>\n                <p>{excerpt}</p>\n            </article>\n        </li>\n    )\n}\n\nPostCard.propTypes = {\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string,\n    date: PropTypes.string,\n    excerpt: PropTypes.string,\n    link: PropTypes.string.isRequired\n}\n\nexport default PostCard","import React from 'react'\n\nimport { PaginationContext } from '../../context'\nimport { Link } from 'gatsby';\n\nconst Pagination = () => {\n\n    const {\n        isFirst,\n        isLast,\n        prevPage,\n        nextPage,\n        currentPage,\n        numPages\n    } = React.useContext(PaginationContext)\n\n    return (\n        <nav className=\"nav  nav--paginator\">\n            {isFirst ?\n                <span className=\"pagination  pagination--previous\">Previous</span>\n                : <Link to={prevPage} className=\"pagination  pagination--previous\">Previous</Link>\n            }\n            <span className=\"pagination  pagination--counter\">{`Page: ${currentPage} of ${numPages}`}</span>\n            {isLast ?\n                <span className=\"pagination  pagination--next\">Next</span>\n                : <Link to={nextPage} className=\"pagination  pagination--next\">Next</Link>\n            }\n        </nav>\n    )\n}\n\nexport default Pagination","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <div className=\"container\">\n                <div className=\"copyright typeset\">\n                    <small className=\"small\">© {new Date().getFullYear()}, Built with</small>\n                </div>\n                <nav className=\"nav  nav--footer\">\n                    <ul className=\"list list-nav\">\n                        <li className=\"item  item--nav\">\n                            JeongHanYoung\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types'\n\n// component \nimport NavBar from './NavBar'\nimport Footer from './Footer'\nimport Index from '../category/Index';\nimport Header from '../header';\nimport { LocationContext } from '../../context';\n\nconst Layout = ({ children, requireIndex, isHome, allPosts }) => {\n\n    const location = React.useContext(LocationContext);\n    console.log(location)\n    const page = location.pathname.split('/')[1]\n\n    if (allPosts) {\n        const categories = allPosts.reduce(\n            (acc, cur) =>\n                acc.includes(cur.category) ? acc : [...acc, cur.category]\n            , [])\n        return (\n            <>\n                <NavBar\n                    allPosts={allPosts}\n                    active={isHome ? \"home\" : page}\n                />\n                {isHome && <Header />}\n                <main className=\"main container\">\n                    {requireIndex &&\n                        <Index\n                            categories={categories}\n                        />}\n                    {children}\n                </main>\n                <Footer />\n            </>\n        )\n    } else {\n        return (\n            <StaticQuery\n                query={graphql`\n                query {\n                    allMarkdownRemark {\n                        edges {\n                            node {\n                                id\n                                frontmatter {\n                                    title\n                                    category\n                                }\n                                excerpt(pruneLength: 70)\n                                fields {\n                                    slug\n                                }\n                            }\n                        }\n                    }\n                }\n            `}\n                render={data => {\n\n                    const allPosts = data.allMarkdownRemark.edges.map(edge => ({\n                        id: edge.node.id,\n                        title: edge.node.frontmatter.title,\n                        category: edge.node.frontmatter.category,\n                        date: edge.node.frontmatter.date,\n                        link: edge.node.fields.slug,\n                        excerpt: edge.node.excerpt\n                    }))\n                    const categories = allPosts.reduce(\n                        (acc, cur) =>\n                            acc.includes(cur.category) ? acc : [...acc, cur.category]\n                        , [])\n                    return <>\n                        <NavBar allPosts={allPosts} />\n                        {isHome && <Header />}\n                        <main className=\"main container\">\n                            {requireIndex &&\n                                <Index\n                                    categories={categories}\n                                />}\n                            {children}\n                        </main>\n                        <Footer />\n                    </>\n                }}\n            />\n        )\n    }\n}\n\n//children, requireIndex, isHome\nLayout.propTypes = {\n    allPosts: PropTypes.arrayOf(PropTypes.shape({\n\n    })),\n    requireIndex: PropTypes.bool,\n    isHome: PropTypes.bool,\n    children: PropTypes.node\n}\n\nexport default Layout","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PostCard from '../post-card';\nimport Pagination from './Pagination';\n\nconst propTypes = {\n    children: PropTypes.node,\n    posts: PropTypes.arrayOf(\n        PropTypes.shape({})\n    ),\n    title: PropTypes.string\n}\n\n\nconst PostList = ({ posts = [], title = \"POST LIST\" }) => {\n    return (\n        <div\n            className=\"content typeset\"\n        >\n            <article className=\"article  article--page  typeset\">\n                <h2>{title}</h2>\n            </article>\n            <ul className=\"list  list--posts\">\n                {posts.map(post =>\n                    <PostCard\n                        key={post.id}\n                        {...post}\n                    />\n                )}\n            </ul>\n            <Pagination />\n        </div>\n    )\n}\n\nPostList.propTypes = propTypes\n\nexport default PostList"],"sourceRoot":""}