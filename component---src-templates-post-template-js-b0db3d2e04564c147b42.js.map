{"version":3,"sources":["webpack:///./src/components/common/MyDisqus.jsx","webpack:///./src/components/post-article.jsx","webpack:///./src/components/table-of-contents.jsx","webpack:///./src/templates/post-template.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/common/Search.jsx","webpack:///./src/components/common/NavBar.jsx","webpack:///./src/components/header.jsx","webpack:///./src/components/footer.jsx","webpack:///./src/components/layout.jsx"],"names":["MyDisqus","_ref","id","title","react_default","a","createElement","gatsby_browser_entry","query","render","data","shortname","site","siteMetadata","disqus","disqusShortname","config","identifier","lib","_42939404","PostArticle","html","className","dangerouslySetInnerHTML","__html","common_MyDisqus","propTypes","string","isRequired","TableContents","_ref$title","previous","next","headings","map","head","i","replaceHead","value","trim","replace","split","join","style","paddingLeft","depth","fontSize","key","href","toLowerCase","to","node","fields","slug","frontmatter","PropTypes","shape","__webpack_require__","d","__webpack_exports__","PostTemplate","pageContext","postInfo","markdownRemark","layout","post_article","table_of_contents","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","object","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","Search","allPosts","_useState","useState","keyword","setKeyword","_useState2","searchResults","setSearchResults","useEffect","length","getPosts","filter","post","includes","Fragment","placeholder","autoComplete","onChange","e","target","onBlur","link","date","excerpt","NavBar","_ref$allPosts","_ref$active","active","position","cx","item--current","common_Search","Header","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","backgroundImage","display","alignItems","description","_public_static_d_3978990474_json__WEBPACK_IMPORTED_MODULE_0__","Footer","author","_public_static_d_2388669901_json__WEBPACK_IMPORTED_MODULE_0__","Date","getFullYear","_footer__WEBPACK_IMPORTED_MODULE_3__","_common_NavBar__WEBPACK_IMPORTED_MODULE_4__","_header__WEBPACK_IMPORTED_MODULE_5__","Layout","isHome"],"mappings":"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","file":"component---src-templates-post-template-js-b0db3d2e04564c147b42.js","sourcesContent":["import React from 'react'\nimport { DiscussionEmbed } from 'disqus-react'\nimport { StaticQuery, graphql } from 'gatsby';\n\n\nconst MyDisqus = ({ id, title }) => {\n    return (\n        <StaticQuery\n            query={\n                graphql`\n                    query {\n                        site {\n                            siteMetadata {\n                                disqus {\n                                    disqusShortname\n                                }\n                            }\n                        }\n                    }\n                `\n            }\n            render={data => {\n                const shortname = data.site.siteMetadata.disqus.disqusShortname\n                const config = {\n                    identifier: id,\n                    title\n                }\n                return <DiscussionEmbed\n                    shortname={shortname}\n                    config={config}\n                >{data}</DiscussionEmbed>\n            }}\n        />\n    )\n}\n\nexport default MyDisqus","import React from 'react'\nimport { string } from 'prop-types'\n\nimport MyDisqus from './common/MyDisqus'\n\nconst PostArticle = ({ html, id, title }) => {\n    return (\n        <article className=\"article article--page content typeset\">\n            <div dangerouslySetInnerHTML={{ __html: html }}></div>\n            <MyDisqus\n                id={id}\n                title={title}\n            />\n        </article>\n    )\n}\n\nPostArticle.propTypes = {\n    html: string.isRequired\n}\n\nexport default PostArticle","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby';\n\nconst TableContents = ({ title = \"Hello World\", previous, next, headings }) => {\n    // console.log(previous)\n    // console.log(next)\n\n    return (\n        <aside className=\"aside typeset aside--right\">\n            <section className=\"section section--description\">\n                <h3>{title}</h3>\n                <ul className=\"list\">\n                    {headings.map((head, i) => {\n                        const replaceHead =\n                            head.value.trim()\n                                .replace('(', '')\n                                .replace(')', '')\n                                .replace('.', '')\n                                .replace(',', '')\n                                .split(' ').join('-')\n                        return <li\n                            style={{ paddingLeft: `${15 * (head.depth - 1)}px`, fontSize: '1rem' }}\n                            key={`heading__${replaceHead}`}\n                        >\n                            <a href={`#${replaceHead.toLowerCase()}`}>\n                                &rsaquo;&nbsp;{head.value}\n                            </a>\n                        </li>\n                    })}\n                </ul>\n                <nav className=\"nav  nav--paginator\">\n                    {previous ?\n                        <Link\n                            className=\"pagination  pagination--previous\"\n                            to={previous.node.fields.slug}>{previous.node.frontmatter.title}</Link>\n                        : <span className=\"pagination  pagination--previous\"></span>}\n                    {next ?\n                        <Link\n                            className=\"pagination  pagination--next\"\n                            to={next.node.fields.slug}>{next.node.frontmatter.title}</Link>\n                        : <span className=\"pagination  pagination--next\"></span>}\n                </nav>\n            </section>\n            {/* <section className=\"\">\n                {previous && previous.node.fields.slug}{' '}{next && next.node.fields.slug}\n            </section> */}\n        </aside>\n    )\n}\n\nTableContents.propTypes = {\n    title: PropTypes.string,\n    previous: PropTypes.shape({\n\n    }),\n    next: PropTypes.shape({})\n}\n\nexport default TableContents","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport PostArticle from '../components/post-article'\nimport TableOfContents from '../components/table-of-contents'\n\n\nconst PostTemplate = ({ data, pageContext }) => {\n    const postInfo = data.markdownRemark\n    const { html, frontmatter, headings, id } = postInfo\n    const { title } = frontmatter\n\n    const { previous, next } = pageContext\n\n    return (\n        <Layout>\n            <PostArticle\n                html={html}\n                id={id}\n                title={title}\n            />\n            <TableOfContents\n                title={title}\n                previous={previous}\n                next={next}\n                headings={headings}\n            />\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n    query getMarkdownPost($slug: String!) {\n        markdownRemark(fields: { slug: { eq: $slug } } ) {\n            id\n            frontmatter {\n                title\n            }\n            html\n            headings {\n                value\n                depth\n            }\n        }\n    }\n`\n\nexport default PostTemplate","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'gatsby'\n\nconst Search = ({ allPosts }) => {\n\n    const [keyword, setKeyword] = useState('')\n    const [searchResults, setSearchResults] = useState([])\n\n    useEffect(() => {\n        if (keyword.length > 2) {\n            const getPosts = allPosts.filter(post => post.title.includes(keyword))\n            setSearchResults(getPosts)\n        } else {\n            setSearchResults([])\n        }\n    }, [keyword])\n\n    return (\n        <>\n            <input\n                className=\"search-input\"\n                placeholder=\"Search\"\n                autoComplete=\"off\"\n                value={keyword}\n                onChange={e => setKeyword(e.target.value)}\n                onBlur={() => {\n                    setKeyword('')\n                }}\n            />\n            <ul className=\"search--results\" >\n                {searchResults.map(post =>\n                    <li\n                        key={post.id}\n                        className=\"search--result\"\n                    >\n                        <Link to={post.link}>\n                            <article className=\"search--result-article\">\n                                <div className=\"search--result-article-title\">\n                                    <h3>{post.title}</h3>\n                                    <span className=\"date\">{post.date}</span>\n                                </div>\n                                <p>{post.excerpt}</p>\n                            </article>\n                        </Link>\n                    </li>\n                )}\n            </ul>\n        </>\n    )\n}\n\nexport default Search","import React from 'react'\nimport { Link } from 'gatsby';\nimport cx from 'classnames'\n\nimport Search from './Search'\n\nconst NavBar = ({ allPosts = [], active = \"\" }) => {\n    return (\n        <header className=\"header\">\n            <div className=\"container\">\n                <Link className=\"logo\" to=\"/\">\n                    DevLog\n                </Link>\n                <ul className=\"list list--nav\" style={{\n                    position: \"relative\"\n                }}>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"home\" })}>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"about\" })}>\n                        <Link to=\"/about\">About</Link>\n                    </li>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"category\" })}>\n                        <Link to=\"/category\">Category</Link>\n                    </li>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"tags\" })}>\n                        <Link to=\"/tags\">Tags</Link>\n                    </li>\n                    <li className=\"item item--nav\">\n                        <a href=\"/TIL\">TIL</a>\n                    </li>\n                    <li className=\"item  item--nav\">\n                        <Search\n                            allPosts={allPosts}\n                        />\n                    </li>\n                </ul>\n            </div>\n        </header>\n    )\n}\n\nexport default NavBar","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\n\nconst Header = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => {\n      return (\n        <div\n          className=\"feature\"\n          style={{\n            backgroundImage: \"url(../images/header.jpeg)\",\n            display: \"flex\",\n            alignItems: \"center\"\n          }}\n        >\n          <div className=\"container typeset\" >\n            <h2 id=\"alembic\">{data.site.siteMetadata.title}</h2>\n            <p>{data.site.siteMetadata.description}</p>\n          </div>\n        </div>\n      )\n    }}\n  />\n)\n\nexport default Header\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst Footer = () => {\n\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    author\n                }\n            }\n        }\n    `)\n\n    const author = data.site.siteMetadata.author\n    return (\n        <footer className=\"footer\">\n            <div className=\"container\">\n                <div className=\"copyright typeset\">\n                    <small className=\"small\">© {new Date().getFullYear()}, Built with</small>\n                </div>\n                <nav className=\"nav  nav--footer\">\n                    <ul className=\"list list-nav\">\n                        <li className=\"item  item--nav\">\n                            {author}\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"../styles/main.scss\"\n\nimport Footer from \"./footer\";\nimport NavBar from \"./common/NavBar\";\nimport Header from \"./header\";\n\nconst Layout = ({ children, isHome }) => (\n  <>\n    <NavBar\n      active=\"home\"\n    />\n    {isHome && <Header />}\n    {/* <Header\n        siteTitle={data.site.siteMetadata.title}\n        siteDescription={data.site.siteMetadata.description}\n      /> */}\n    <main className=\"main container\">{children}</main>\n    <Footer />\n  </>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}