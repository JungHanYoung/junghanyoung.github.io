{"data":{"markdownRemark":{"id":"8160b41e-aad8-509f-bfaf-902871107429","frontmatter":{"title":"JWT를 이용한 token 인증 구현해보기."},"html":"<h1 id=\"jwt를-이용한-token인증\"><a href=\"#jwt%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-token%EC%9D%B8%EC%A6%9D\" aria-label=\"jwt를 이용한 token인증 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jwt를 이용한 token인증</h1>\n<h2 id=\"개요\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h2>\n<p>React를 공부하다보니 PWA(Progressive Web Application)을 만들기 위해서는 서버 사이드 렌더링이 아닌 REAST API를 호출하여 데이터를 렌더링하는 방식을 많이 사용하는 것 같다. 서버 사이드 렌더링도 있는데 너무 어려워 보임 ):</p>\n<p>웹 어플리케이션에서 빠질 수 없는 것이 인증처리..</p>\n<p>보통 인증처리는 Session을 사용할 수 있지만 이는 REST API가 지향하는 방식이 아니라고 한다. </p>\n<p>그래서 REST API는 Session인증 대신 Token인증 방식을 이용한다.</p>\n<p>express와 sequelize를 활용, jwt를 이용해 토큰을 응답받는 API를 만든다.</p>\n<hr>\n<h2 id=\"api-설계\"><a href=\"#api-%EC%84%A4%EA%B3%84\" aria-label=\"api 설계 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>API 설계</h2>\n<ul>\n<li>(POST)    /api/user/login</li>\n<li>(GET)     /api/user/me</li>\n</ul>\n<h2 id=\"1-login---인증토큰-요청\"><a href=\"#1-login---%EC%9D%B8%EC%A6%9D%ED%86%A0%ED%81%B0-%EC%9A%94%EC%B2%AD\" aria-label=\"1 login   인증토큰 요청 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. LOGIN - 인증토큰 요청</h2>\n<ul>\n<li>username과 password로 로그인.</li>\n<li>token을 리턴한다.</li>\n</ul>\n<p>Request</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    &quot;username&quot;: &quot;test&quot;,\n    &quot;password&quot;: &quot;testpw&quot;\n}</code></pre></div>\n<p>Response</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    &quot;success&quot;: true,\n    &quot;token&quot;: &quot;&lt;토큰&gt;&quot;\n}</code></pre></div>\n<h2 id=\"2-me\"><a href=\"#2-me\" aria-label=\"2 me permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. ME</h2>\n<ul>\n<li>로그인시 받은 token을 header의 x-access-token을 보냄.</li>\n<li>x-access-token이 없을 시 Error 리턴</li>\n<li>token을 해독하여 유저 정보 리턴</li>\n</ul>\n<p>Request</p>\n<ul>\n<li>N/A</li>\n</ul>\n<p>Response</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    success: true,\n    user: {\n        id: ....,\n        username: ...,\n        iat: ...,\n        exp: ...,\n    }\n}</code></pre></div>\n<hr>\n<h2 id=\"프로젝트-생성\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"프로젝트 생성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 생성</h2>\n<h3 id=\"프로젝트-구조\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B5%AC%EC%A1%B0\" aria-label=\"프로젝트 구조 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 구조</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;Project&gt;\n- node_modules\n- .babelrc\n- package.json\n- server.js\n- models\n - index.js\n - user.js\n- routes\n - index.js\n - user.js</code></pre></div>\n<h3 id=\"모듈-설치\"><a href=\"#%EB%AA%A8%EB%93%88-%EC%84%A4%EC%B9%98\" aria-label=\"모듈 설치 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈 설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add express sequelize mysql2 bcryptjs jsonwebtoken\nyarn add -D babel-core babel-preset-env babel-cli</code></pre></div>\n<ul>\n<li>express - 웹 서버</li>\n<li>sequelize - 데이터베이스 ORM</li>\n<li>mysql2 - 데이터베이스 커넥터</li>\n<li>bcryptjs - SHA 암호화</li>\n<li>jsonwebtoken(JWT) - 토큰 암호화\n<br/><br/></li>\n<li>babel-core, babel-preset-env, babel-cli - ES6 컴파일</li>\n</ul>\n<hr>\n<h2 id=\"서버-데이터-모델-및-라우터\"><a href=\"#%EC%84%9C%EB%B2%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8-%EB%B0%8F-%EB%9D%BC%EC%9A%B0%ED%84%B0\" aria-label=\"서버 데이터 모델 및 라우터 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버, 데이터 모델 및 라우터</h2>\n<h3 id=\"서버\"><a href=\"#%EC%84%9C%EB%B2%84\" aria-label=\"서버 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// server.js\nimport express from &#39;express&#39;;\n\nimport models from &#39;./models&#39;;\nimport apiRouter from &#39;./routes&#39;;\n\nconst app = express();\n\napp.use(express.json());\n\napp.use(&#39;/api&#39;, apiRouter);\n\nmodels.sequelize.sync().then(() =&gt; {\n\tapp.listen(3000, () =&gt; console.log(&#39;Server is listening on port&#39;, 3000));\n});</code></pre></div>\n<h3 id=\"데이터-모델\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8\" aria-label=\"데이터 모델 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 모델</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// models/index.js\nimport Sequelize from &#39;sequelize&#39;;\nimport path from &#39;path&#39;;\n\nconst sequelize = new Sequelize(&#39;testdb1&#39;, &#39;root&#39;, &#39;1234&#39;, {\n\tdialect: &#39;mysql&#39;,\n\thost: &#39;localhost&#39;\n});\n\nconst models = {\n\tUser: sequelize.import(path.join(__dirname, &#39;/user&#39;))\n};\n\nmodels.sequelize = sequelize;\nmodels.Sequelize = Sequelize;\n\nexport default models;\n\n// models/user.js\nexport default (sequelize, DataTypes) =&gt; {\n\tconst User = sequelize.define(&#39;user&#39;, {\n\t\tid: {\n\t\t\ttype: DataTypes.INTEGER,\n\t\t\tprimaryKey: true,\n\t\t\tautoIncrement: true\n\t\t},\n\t\tusername: {\n\t\t\ttype: DataTypes.STRING,\n\t\t\tunique: true\n\t\t},\n\t\tpassword: {\n\t\t\ttype: DataTypes.STRING\n\t\t}\n\t});\n\n\treturn User;\n};</code></pre></div>\n<ul>\n<li>sequelize를 이용, mysql과 연동</li>\n<li>user 스키마를 만듬</li>\n</ul>\n<h3 id=\"라우터\"><a href=\"#%EB%9D%BC%EC%9A%B0%ED%84%B0\" aria-label=\"라우터 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>라우터</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// routes/index.js\nimport express from &#39;express&#39;;\n\nimport userRouter from &#39;./user&#39;;\n\nconst router = express.Router();\n\nrouter.use(&#39;/user&#39;, userRouter);\n\nexport default router;</code></pre></div>\n<br/>\n<h2 id=\"user-router\"><a href=\"#user-router\" aria-label=\"user router permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>User Router*</h2>\n<ol>\n<li>username와 password로 로그인 (POST - /api/user/login)</li>\n<li>로그인 정보가 유효하면 토큰 응답 O</li>\n<li>로그인 정보가 유효하지 않을 시 토큰 응답 X</li>\n<li>Client는 로그인시 받은 토큰을 HTTP통신시 헤더에 넣어 서버로부터 인증을 받는다. (GET - /api/user/me)</li>\n</ol>\n<h3 id=\"로그인\"><a href=\"#%EB%A1%9C%EA%B7%B8%EC%9D%B8\" aria-label=\"로그인 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로그인</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// routes/user.js\nimport express from &#39;express&#39;;\nimport models from &#39;../models&#39;;\nimport bcrypt from &#39;bcryptjs&#39;;\nimport jwt from &#39;jsonwebtoken&#39;;\n\nconst router = express.Router();\n\n// POST - /api/user/login\n// Body - username, password\n// Response - success여부, token?\nrouter.post(&#39;/login&#39;, (req, res) =&gt; {\n\tconst { username, password } = req.body;\n\n    // username에 해당하는 정보 찾기\n\tmodels.User\n\t\t.findOne({\n\t\t\twhere: {\n\t\t\t\tusername\n\t\t\t}\n\t\t})\n\t\t.then((result) =&gt; {\n            // 정보 유무 체크\n            if (!result) {\n\t\t\t\treturn res.status(404).json({\n\t\t\t\t\tsuccess: false\n\t\t\t\t});\n\t\t\t}\n            // 비밀번호 비교\n\t\t\tconst valid = bcrypt.compareSync(password, result.password);\n            // 로그인 정보 유효함.\n\t\t\tif (valid) {\n\t\t\t\tconst user = result.dataValues;\n\t\t\t\tdelete user.password;\n\t\t\t\tconst token = jwt.sign(user, &#39;Secret Key&#39;);\n\t\t\t\tres.json({\n\t\t\t\t\tsuccess: true,\n\t\t\t\t\ttoken\n\t\t\t\t});\n            // 비밀번호가 틀림\n\t\t\t} else {\n\t\t\t\tres.status(403).json({\n\t\t\t\t\tsuccess: false\n\t\t\t\t});\n\t\t\t}\n\t\t})\n        // 에러 감지\n\t\t.catch((err) =&gt; {\n\t\t\tconsole.error(err);\n\t\t\tres.status(500).json({\n\t\t\t\tsuccess: false\n\t\t\t});\n\t\t});\n});</code></pre></div>\n<ul>\n<li>jwt.sign함수 - plain obejct로 문자열 토큰을 만든다.</li>\n</ul>\n<h3 id=\"자신의-프로필\"><a href=\"#%EC%9E%90%EC%8B%A0%EC%9D%98-%ED%94%84%EB%A1%9C%ED%95%84\" aria-label=\"자신의 프로필 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자신의 프로필</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// GET - /api/user/me\n// Body - N/A\n// Response - 유저정보\nrouter.get(&#39;/me&#39;, (req, res) =&gt; {\n\tconst token = req.headers[&#39;x-access-token&#39;];\n\n\tconst userInfo = jwt.verify(token, &#39;Secret Key&#39;);\n\n\tres.json(userInfo);\n});\n\nexport default router;</code></pre></div>\n<ul>\n<li></li>\n<li>jwt.verify함수 - 암호화된 토큰을 검증, 토큰을 해독한 값을 리턴</li>\n</ul>\n<br/>\n<hr>\n<br/>\n<h2 id=\"결과\"><a href=\"#%EA%B2%B0%EA%B3%BC\" aria-label=\"결과 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과</h2>\n<p>로그인시</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;Request&gt;\nPOST - /api/user/login\nheaders - None\nbody -\n{\n\t&quot;username&quot;: &quot;test&quot;,\n\t&quot;password&quot;: &quot;testpw&quot;\n}\n-&gt;\n&lt;Response&gt;\n{\n    &quot;success&quot;: true,\n    &quot;token&quot;: &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJ0ZXN0IiwiY3JlYXRlZEF0IjoiMjAxOC0wNi0xN1QwNjoxOTo1NC4wMDBaIiwidXBkYXRlZEF0IjoiMjAxOC0wNi0xN1QwNjoxOTo1NC4wMDBaIiwiaWF0IjoxNTI5MjE5NjM5fQ.2ZkBkxat8wVSzo29MzisrQLt1MXoypfUDM81ecW6ACg&quot;\n}</code></pre></div>\n<p>로그인 후 자신의 프로필</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;Request&gt;\nGET - /api/user/me\nheaders - \n{\n    x-access-token: &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJ0ZXN0IiwiY3JlYXRlZEF0IjoiMjAxOC0wNi0xN1QwNjoxOTo1NC4wMDBaIiwidXBkYXRlZEF0IjoiMjAxOC0wNi0xN1QwNjoxOTo1NC4wMDBaIiwiaWF0IjoxNTI5MjE5NjM5fQ.2ZkBkxat8wVSzo29MzisrQLt1MXoypfUDM81ecW6ACg&quot;\n}\nbody - None\n-&gt;\n&lt;Response&gt;\n{\n    &quot;id&quot;: 1,\n    &quot;username&quot;: &quot;test&quot;,\n    &quot;createdAt&quot;: &quot;2018-06-17T06:19:54.000Z&quot;,\n    &quot;updatedAt&quot;: &quot;2018-06-17T06:19:54.000Z&quot;,\n    &quot;iat&quot;: 1529219639\n}</code></pre></div>","headings":[{"value":"jwt를 이용한 token인증","depth":1},{"value":"개요","depth":2},{"value":"API 설계","depth":2},{"value":"1. LOGIN - 인증토큰 요청","depth":2},{"value":"2. ME","depth":2},{"value":"프로젝트 생성","depth":2},{"value":"프로젝트 구조","depth":3},{"value":"모듈 설치","depth":3},{"value":"서버, 데이터 모델 및 라우터","depth":2},{"value":"서버","depth":3},{"value":"데이터 모델","depth":3},{"value":"라우터","depth":3},{"value":"User Router*","depth":2},{"value":"로그인","depth":3},{"value":"자신의 프로필","depth":3},{"value":"결과","depth":2}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/blog/node-express/2018-06-17-jwt를-이용한-token인증/","previous":{"node":{"id":"dcd7f1a5-872d-50df-8417-bd894d2601df","frontmatter":{"title":"JDBC -> DBCP -> MyBatis","category":"spring","date":"2018-06-17 07:49:00 +0300","tags":["Java","Spring","Database","MyBatis","JDBC"]},"fields":{"slug":"/posts/blog/spring/2018-06-18-JDBC,-DBCP,-그리고-MyBatis/"}}},"next":{"node":{"id":"39354791-87e9-5161-97d2-82e4b823a62a","frontmatter":{"title":"자바스크립트에서 객체를 만드는 법 1","category":"javascript","date":"2018-06-26","tags":["javascript","foundation"]},"fields":{"slug":"/posts/blog/javascript/2018-06-26-자바스크립트-객체-정의/"}}}}}