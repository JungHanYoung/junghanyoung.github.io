{"data":{"markdownRemark":{"frontmatter":{"title":"Express에 Sequelize 적용해보기"},"html":"<h1>Express &#x26; Sequelize</h1>\n<h2>모듈 설치</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// sequelize 설치\n&gt; npm install --save sequelize express\n&amp; yarn add sequelize express\n\n// DBMS 모듈 하나 선택\n$ npm install --save pg pg-hstore // PostgreSQL\n$ npm install --save mysql2 &lt;-- select\n$ npm install --save sqlite3\n$ npm install --save tedious // MSSQL</code></pre></div>\n<h2>프로젝트 구조</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;Project&gt;\n- node_modules\n- models\n - index.js\n - user.js\n - post.js\n- app.js\n- package.json</code></pre></div>\n<h2>Source Code</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// models/index.js\n\nvar Sequelize = require(&#39;sequelize&#39;);\nvar path = require(&#39;path&#39;);\n\n// DB 연결정보\nvar sequelize = new Sequelize(&lt;DB_NAME&gt;, &#39;&lt;DB_USER&gt;&#39;, &#39;&lt;DB_PASSWORD&gt;&#39;, {\n    // npm install --save mysql2\n\tdialect: &#39;mysql&#39;,\n\thost: &#39;localhost&#39;\n});\n\n// ORM\nvar models = {\n    // models/user.js, models/post.js 생성\n\tUser: sequelize.import(path.join(__dirname, &#39;/user&#39;)),\n\tPost: sequelize.import(path.join(__dirname, &#39;/post&#39;))\n};\n\n// 테이블 간의 관계\nObject.keys(models).forEach((modelName) =&gt; {\n\tif (&#39;associate&#39; in models[modelName]) {\n\t\tmodels[modelName].associate(models);\n\t}\n});\n\nmodels.sequelize = sequelize;\nmodels.Sequelize = Sequelize;\n\nmodule.exports = models;</code></pre></div>\n<ul>\n<li>DB 연결정보 작성</li>\n<li>모델 모듈 호출 후 저장</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// models/user.js\n\nmodule.exports = function(sequelize, DataTypes) {\n\tconst User = sequelize.define(&#39;user&#39;, {\n\t\tusername: {\n\t\t\ttype: DataTypes.STRING,\n\t\t\tunique: true\n\t\t},\n\t\tpassword: {\n\t\t\ttype: DataTypes.STRING\n\t\t}\n\t});\n\n\tUser.associate = function(models) {};\n\n\treturn User;\n};</code></pre></div>\n<ul>\n<li>sequelize.define으로 모델 생성</li>\n<li>외래키가 있을 경우 associate 함수 안에 정의</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exports = function(sequelize, DataTypes) {\n\tconst Post = sequelize.define(&#39;post&#39;, {\n\t\ttitle: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcontent: {\n\t\t\ttype: DataTypes.STRING\n\t\t}\n\t});\n\n\tPost.associate = function(models) {\n\t\tPost.belongsTo(models.User);\n\t};\n\n\treturn Post;\n};</code></pre></div>\n<ul>\n<li>외래키의 경우 Post.belongsTo 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// app.js\n\nvar models = require(&#39;./models&#39;);\n...\nmodels.sequelize.sync(function() {\n    app.listen(3000, function() {\n        console.log(&#39;Server Started..&#39;)\n    });\n})</code></pre></div>\n<ul>\n<li>sync시 데이터베이스가 모듈 내용에 따라 싱크를 맞춤.</li>\n<li>성공시 서버 구동.</li>\n</ul>\n<h2>실행시 테이블 구조 확인</h2>\n<h3>users 테이블</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Field</th>\n<th align=\"left\">Type</th>\n<th align=\"left\">Null</th>\n<th align=\"left\">Key</th>\n<th align=\"left\">Default</th>\n<th align=\"left\">Extra</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">id</td>\n<td align=\"left\">int(11)</td>\n<td align=\"left\">No</td>\n<td align=\"left\">PRI</td>\n<td align=\"left\">NULL</td>\n<td align=\"left\">auto_increment</td>\n</tr>\n<tr>\n<td align=\"left\">username</td>\n<td align=\"left\">varchar(255)</td>\n<td align=\"left\">No</td>\n<td align=\"left\">UNI</td>\n<td align=\"left\">NULL</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">password</td>\n<td align=\"left\">varchar(255)</td>\n<td align=\"left\">YES</td>\n<td align=\"left\"></td>\n<td align=\"left\">NULL</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">createdAt</td>\n<td align=\"left\">datetime</td>\n<td align=\"left\">No</td>\n<td align=\"left\"></td>\n<td align=\"left\">NULL</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">updatedAt</td>\n<td align=\"left\">datetime</td>\n<td align=\"left\">No</td>\n<td align=\"left\"></td>\n<td align=\"left\">NULL</td>\n<td align=\"left\"></td>\n</tr>\n</tbody>\n</table>\n<h3>posts 테이블</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Field</th>\n<th align=\"left\">Type</th>\n<th align=\"left\">Null</th>\n<th align=\"left\">Key</th>\n<th align=\"left\">Default</th>\n<th align=\"left\">Extra</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">id</td>\n<td align=\"left\">int(11)</td>\n<td align=\"left\">No</td>\n<td align=\"left\">PRI</td>\n<td align=\"left\">NULL</td>\n<td align=\"left\">auto_increment</td>\n</tr>\n<tr>\n<td align=\"left\">title</td>\n<td align=\"left\">varchar(255)</td>\n<td align=\"left\">YES</td>\n<td align=\"left\"></td>\n<td align=\"left\">NULL</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">content</td>\n<td align=\"left\">varchar(255)</td>\n<td align=\"left\">YES</td>\n<td align=\"left\"></td>\n<td align=\"left\">NULL</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">createdAt</td>\n<td align=\"left\">datetime</td>\n<td align=\"left\">No</td>\n<td align=\"left\"></td>\n<td align=\"left\">NULL</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">updatedAt</td>\n<td align=\"left\">datetime</td>\n<td align=\"left\">No</td>\n<td align=\"left\"></td>\n<td align=\"left\">NULL</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">userId</td>\n<td align=\"left\">int(11)</td>\n<td align=\"left\">YES</td>\n<td align=\"left\">MUL</td>\n<td align=\"left\">NULL</td>\n<td align=\"left\"></td>\n</tr>\n</tbody>\n</table>"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/blog/node-express/2018-06-09-Express-&-Sequelize/","previous":{"node":{"id":"8c08aa1e-e9de-580c-9a39-0412ca9fa553","frontmatter":{"title":"Express 웹서버 라우팅 분할 (2)","category":"node-express","date":"2018-06-09"},"fields":{"slug":"/posts/blog/node-express/2018-06-09-ExpressJS-2-라우팅-분할/"}}},"next":{"node":{"id":"457c1037-1eae-5696-8ec9-2955e29b8e57","frontmatter":{"title":"Express 웹서버 만들기 (1)","category":"node-express","date":"2018-06-09"},"fields":{"slug":"/posts/blog/node-express/2018-06-09-ExpressJS-1/"}}}}}