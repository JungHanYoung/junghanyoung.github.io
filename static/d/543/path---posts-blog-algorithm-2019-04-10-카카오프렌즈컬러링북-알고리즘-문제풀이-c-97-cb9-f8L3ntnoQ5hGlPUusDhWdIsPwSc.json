{"data":{"markdownRemark":{"id":"6f11d351-1614-53b4-9b4d-af4788d26426","frontmatter":{"title":"카카오프렌즈 컬러링북 알고리즘 문제풀이 - 프로그래머스 Level 3 (테스트 O, 채점 X)"},"html":"<blockquote>\n<p>채점시에 스택오버플로우 발생하여 ㅠㅠ 통과하지 못했습니다. </p>\n</blockquote>\n<p>2017 카카오코드 예선 문제</p>\n<p>내가 생각한 문제 풀이들을 정리, 기록!</p>\n<h2 id=\"카카오프렌즈-컬러링북-문제\"><a href=\"#%EC%B9%B4%EC%B9%B4%EC%98%A4%ED%94%84%EB%A0%8C%EC%A6%88-%EC%BB%AC%EB%9F%AC%EB%A7%81%EB%B6%81-%EB%AC%B8%EC%A0%9C\" aria-label=\"카카오프렌즈 컬러링북 문제 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>카카오프렌즈 컬러링북 문제</h2>\n<blockquote>\n<p>문제설명과 제한사항은 다음의\n<a href=\"https://programmers.co.kr/learn/courses/30/lessons/1829\" target=\"_blank\">링크</a>에서 확인할 수 있습니다.</p>\n</blockquote>\n<h2 id=\"문제-해결-단계\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EB%8B%A8%EA%B3%84\" aria-label=\"문제 해결 단계 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결 단계</h2>\n<h3 id=\"문제-풀이-방법-생각하기\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4-%EB%B0%A9%EB%B2%95-%EC%83%9D%EA%B0%81%ED%95%98%EA%B8%B0\" aria-label=\"문제 풀이 방법 생각하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 풀이 방법 생각하기.</h3>\n<ol>\n<li>2차원 배열 picture의 각 요소를 탐방. (이중 for문)</li>\n<li>\n<p>상하좌우의 색상이 현재 요소와 같은 색상인지 체크(재귀호출)</p>\n<ol>\n<li>탐방할 방향의 요소가 현재 요소와 색깔이 같을때 탐방수행.</li>\n<li>다른경우 해당 방향의 영역 사이즈 0으로 지정.</li>\n</ol>\n</li>\n<li>\n<p>이전에 탐방을 했으면 호출하지 않도록 방문여부 2차원 boolean배열 필요.</p>\n<ol>\n<li>함수안에 해당 요소가 체크되었는지 확인, 체크 안되어있으면 체크해놓고 다음 수행.</li>\n</ol>\n</li>\n<li>상하좌우로 탐방하기전에 탐방할 요소의 색깔 체크.</li>\n<li>\n<p>solution함수에서 각 요소를 돌며 리턴받은 사이즈가 0 이상일 때 리스트에 추가</p>\n<ol>\n<li>0일 경우 탐방을 수행했거나, 색칠이 되어있지 않은 경우이므로 영역으로 치지 않기 위해</li>\n<li>이렇게 추가하면 나중에 리스트의 사이즈는 영역의 수, 최대값이 가장 큰 영역의 넓이가 될 것.</li>\n</ol>\n</li>\n<li>각 영역을 모두 탐방했으면 리스트에서 최대값을 구하고 정답 리턴.</li>\n</ol>\n<h4 id=\"1-2차원-배열-picture의-각-요소를-탐방\"><a href=\"#1-2%EC%B0%A8%EC%9B%90-%EB%B0%B0%EC%97%B4-picture%EC%9D%98-%EA%B0%81-%EC%9A%94%EC%86%8C%EB%A5%BC-%ED%83%90%EB%B0%A9\" aria-label=\"1 2차원 배열 picture의 각 요소를 탐방 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) 2차원 배열 picture의 각 요소를 탐방.</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> picture<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// 2차원 배열 순회</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 각 요소에 대하여 탐방 수행.</span>\n            <span class=\"token function\">recursion</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> picture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"2-상하좌우의-색상이-현재-요소와-같은-색상인지-체크재귀호출\"><a href=\"#2-%EC%83%81%ED%95%98%EC%A2%8C%EC%9A%B0%EC%9D%98-%EC%83%89%EC%83%81%EC%9D%B4-%ED%98%84%EC%9E%AC-%EC%9A%94%EC%86%8C%EC%99%80-%EA%B0%99%EC%9D%80-%EC%83%89%EC%83%81%EC%9D%B8%EC%A7%80-%EC%B2%B4%ED%81%AC%EC%9E%AC%EA%B7%80%ED%98%B8%EC%B6%9C\" aria-label=\"2 상하좌우의 색상이 현재 요소와 같은 색상인지 체크재귀호출 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) 상하좌우의 색상이 현재 요소와 같은 색상인지 체크(재귀호출)</h4>\n<ul>\n<li>같은 색상일 경우에만 탐방</li>\n<li>다를 경우는 조금있다가.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">recursion</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">,</span> picture<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 같은 경우 재귀호출</span>\n    <span class=\"token comment\">// 상</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>picture<span class=\"token punctuation\">[</span>row<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> picture<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token function\">recursion</span><span class=\"token punctuation\">(</span>row<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> picture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 하</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>picture<span class=\"token punctuation\">[</span>row<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> picture<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token function\">recursion</span><span class=\"token punctuation\">(</span>row<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> picture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 좌</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>picture<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> picture<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token function\">recursion</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> picture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 우</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>picture<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> picture<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token function\">recursion</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> picture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>여기서 각각의 방향으로 탐방한 후 결과값으로 해당 방향으로의 영역사이즈 리턴할 수 있도록 변경.</li>\n<li>색깔이 다르면 해당 방향의 영역사이즈는 0.</li>\n<li>그리고 탐방시 배열을 벗어나는 예외조건 처리.</li>\n<li>재귀호출의 리턴값으로 up + down + left + right + 1</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">recursion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 삼항연산자로 색깔이 다르면 0, 같으면 재귀호출 리턴값</span>\n    <span class=\"token keyword\">int</span> up <span class=\"token operator\">=</span> row<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> picture<span class=\"token punctuation\">[</span>row<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> picture<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> \n        <span class=\"token operator\">?</span> <span class=\"token function\">recursion</span><span class=\"token punctuation\">(</span>row<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> picture<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 각각의 방향에 대해 위와 같이 선언. ...</span>\n    <span class=\"token keyword\">return</span> up <span class=\"token operator\">+</span> down <span class=\"token operator\">+</span> left <span class=\"token operator\">+</span> right <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"3-이전에-탐방을-했으면-호출하지-않도록-방문여부-저장할-2차원-boolean배열-선언\"><a href=\"#3-%EC%9D%B4%EC%A0%84%EC%97%90-%ED%83%90%EB%B0%A9%EC%9D%84-%ED%96%88%EC%9C%BC%EB%A9%B4-%ED%98%B8%EC%B6%9C%ED%95%98%EC%A7%80-%EC%95%8A%EB%8F%84%EB%A1%9D-%EB%B0%A9%EB%AC%B8%EC%97%AC%EB%B6%80-%EC%A0%80%EC%9E%A5%ED%95%A0-2%EC%B0%A8%EC%9B%90-boolean%EB%B0%B0%EC%97%B4-%EC%84%A0%EC%96%B8\" aria-label=\"3 이전에 탐방을 했으면 호출하지 않도록 방문여부 저장할 2차원 boolean배열 선언 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(3) 이전에 탐방을 했으면 호출하지 않도록 방문여부 저장할 2차원 boolean배열 선언.</h4>\n<ul>\n<li>함수안에 해당 요소가 체크되었는지 확인, 체크 안되어있으면 체크해놓고 다음 수행.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 사이즈 m, n으로 picture와 같은 크기로 배열 선언.</span>\n    <span class=\"token keyword\">boolean</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> checked <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">boolean</span><span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token comment\">// 방문여부 넘겨줘야</span>\n    <span class=\"token function\">recursion</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> picture<span class=\"token punctuation\">,</span> checked<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 방문여부 파라미터 추가</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">recursion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> checked<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 현재 요소가 탐방을 마친 상태라면, 사이즈 0 리턴</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>checked<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 아니면 탐방체크 후 다음 수행.</span>\n    checked<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"4-상하좌우로-탐방하기전에-탐방할-요소의-색깔-체크\"><a href=\"#4-%EC%83%81%ED%95%98%EC%A2%8C%EC%9A%B0%EB%A1%9C-%ED%83%90%EB%B0%A9%ED%95%98%EA%B8%B0%EC%A0%84%EC%97%90-%ED%83%90%EB%B0%A9%ED%95%A0-%EC%9A%94%EC%86%8C%EC%9D%98-%EC%83%89%EA%B9%94-%EC%B2%B4%ED%81%AC\" aria-label=\"4 상하좌우로 탐방하기전에 탐방할 요소의 색깔 체크 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(4) 상하좌우로 탐방하기전에 탐방할 요소의 색깔 체크.</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">recursion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 탐방여부 체크...</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token comment\">// - 현재 요소가 색칠이 되어있지 않은 경우</span>\n    <span class=\"token comment\">// 사이즈 0 리턴</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>picture<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"5-solution함수에서-각-요소를-돌며-리턴받은-영역-사이즈가-0-이상일때만-리스트에-추가\"><a href=\"#5-solution%ED%95%A8%EC%88%98%EC%97%90%EC%84%9C-%EA%B0%81-%EC%9A%94%EC%86%8C%EB%A5%BC-%EB%8F%8C%EB%A9%B0-%EB%A6%AC%ED%84%B4%EB%B0%9B%EC%9D%80-%EC%98%81%EC%97%AD-%EC%82%AC%EC%9D%B4%EC%A6%88%EA%B0%80-0-%EC%9D%B4%EC%83%81%EC%9D%BC%EB%95%8C%EB%A7%8C-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%97%90-%EC%B6%94%EA%B0%80\" aria-label=\"5 solution함수에서 각 요소를 돌며 리턴받은 영역 사이즈가 0 이상일때만 리스트에 추가 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(5) solution함수에서 각 요소를 돌며 리턴받은 영역 사이즈가 0 이상일때만 리스트에 추가</h4>\n<ul>\n<li>0일 경우 탐방을 수행했거나, 색칠이 되어있지 않은 경우이므로 영역으로 치지 않음.</li>\n<li>이렇게 추가하면 나중에 리스트의 사이즈는 영역의 수, 최대값이 가장 큰 영역의 넓이가 될 것.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 각 영역의 사이즈를 받을 리스트 </span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> sizeList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// twice for</span>\n    <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> <span class=\"token function\">recursion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"6-각-영역을-모두-탐방했으면-리스트에서-최대값을-구하고-정답-리턴\"><a href=\"#6-%EA%B0%81-%EC%98%81%EC%97%AD%EC%9D%84-%EB%AA%A8%EB%91%90-%ED%83%90%EB%B0%A9%ED%96%88%EC%9C%BC%EB%A9%B4-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%97%90%EC%84%9C-%EC%B5%9C%EB%8C%80%EA%B0%92%EC%9D%84-%EA%B5%AC%ED%95%98%EA%B3%A0-%EC%A0%95%EB%8B%B5-%EB%A6%AC%ED%84%B4\" aria-label=\"6 각 영역을 모두 탐방했으면 리스트에서 최대값을 구하고 정답 리턴 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(6) 각 영역을 모두 탐방했으면 리스트에서 최대값을 구하고 정답 리턴.</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> sizeList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 각 요소의 탐방 수행..</span>\n\n    <span class=\"token comment\">// 최대값 구하기.</span>\n    <span class=\"token keyword\">int</span> max <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span>MIN_VALUE<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num <span class=\"token operator\">:</span> sizeList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>max <span class=\"token operator\">&lt;</span> num<span class=\"token punctuation\">)</span>\n            max <span class=\"token operator\">=</span> num<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 각 영역의 수와 가장 큰 영역의 사이즈 배열로 리턴</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span>sizeList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","headings":[{"value":"카카오프렌즈 컬러링북 문제","depth":2},{"value":"문제 해결 단계","depth":2},{"value":"문제 풀이 방법 생각하기.","depth":3},{"value":"(1) 2차원 배열 picture의 각 요소를 탐방.","depth":4},{"value":"(2) 상하좌우의 색상이 현재 요소와 같은 색상인지 체크(재귀호출)","depth":4},{"value":"(3) 이전에 탐방을 했으면 호출하지 않도록 방문여부 저장할 2차원 boolean배열 선언.","depth":4},{"value":"(4) 상하좌우로 탐방하기전에 탐방할 요소의 색깔 체크.","depth":4},{"value":"(5) solution함수에서 각 요소를 돌며 리턴받은 영역 사이즈가 0 이상일때만 리스트에 추가","depth":4},{"value":"(6) 각 영역을 모두 탐방했으면 리스트에서 최대값을 구하고 정답 리턴.","depth":4}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/blog/algorithm/2019-04-10-카카오프렌즈컬러링북-알고리즘-문제풀이/","previous":{"node":{"id":"3223e1a3-9c51-5c91-955d-26b42c3dadb3","frontmatter":{"title":"소수찾기 알고리즘 문제풀이 - 백트래킹 이용 - 프로그래머스 Level 2 (점수: 100/100)","category":"algorithm","date":"2019-04-06","tags":["programmers","algorithm"]},"fields":{"slug":"/posts/blog/algorithm/2019-04-06-소수찾기-알고리즘-문제/"}}},"next":{"node":{"id":"d980a891-2c91-5942-9e83-db7f847d9ed2","frontmatter":{"title":"OAuth2 인증방식의 이해","category":null,"date":"2019-04-30","tags":["oauth2","google","facebook","github"]},"fields":{"slug":"/posts/blog/2019-04-30-oauth2-인증방식의-이해/"}}}}}