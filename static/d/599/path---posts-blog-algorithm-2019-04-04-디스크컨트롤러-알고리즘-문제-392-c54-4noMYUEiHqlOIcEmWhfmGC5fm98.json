{"data":{"markdownRemark":{"id":"9840333f-d81a-5fc6-9513-9af06d2c508a","frontmatter":{"title":"디스크컨트롤러 알고리즘 문제풀이(미완) - 프로그래머스 Level 3"},"html":"<p>프로그래머스 힙 문제 레벨 3</p>\n<p>이것을 풀때의 나의 생각을 정리하고 기록하겠다.</p>\n<h2 id=\"디스크-컨트롤러-문제\"><a href=\"#%EB%94%94%EC%8A%A4%ED%81%AC-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-%EB%AC%B8%EC%A0%9C\" aria-label=\"디스크 컨트롤러 문제 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디스크 컨트롤러 문제</h2>\n<blockquote>\n<p>문제설명과 제한사항은 다음의 링크에서 확인할 수 있습니다.</p>\n</blockquote>\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/42627\">링크</a></p>\n<h2 id=\"문제-해결-단계\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EB%8B%A8%EA%B3%84\" aria-label=\"문제 해결 단계 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결 단계</h2>\n<h3 id=\"문제-풀이-방법-생각하기\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4-%EB%B0%A9%EB%B2%95-%EC%83%9D%EA%B0%81%ED%95%98%EA%B8%B0\" aria-label=\"문제 풀이 방법 생각하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 풀이 방법 생각하기.</h3>\n<ul>\n<li>\n<p>일단 작업에 대한 요청시점과 시간을 클래스로 맵핑함.</p>\n</li>\n<li>\n<p>이전 작업이 끝난 시점과 다음 작업을 비교하는 로직 필요할듯.</p>\n</li>\n<li>\n<p>비교해서 이전 작업이 끝나지 않았을 때, Queue에 넣어 주어야 할 것으로 보임.</p>\n<ul>\n<li>해당 작업 클래스 타입을 갖는 큐를 만듬.</li>\n</ul>\n</li>\n<li>\n<p>나중에 Queue에서 작업을 꺼낼때, 작업시간이 가장 적은 것부터 수행해야 함.</p>\n<ul>\n<li>해당 큐는 작업시간이 적은 순서로 poll하는 우선순위 큐로 생성(Comparator 구현)</li>\n</ul>\n</li>\n<li>\n<p>요청시점이 빠른것부터 순회해야 될것 같아 정렬할 필요가 있다.</p>\n</li>\n<li>\n<p>정렬된 리스트를 순회하면서 작업 수행</p>\n</li>\n<li>\n<p>큐에 작업이 있는지 없는지 따져야</p>\n</li>\n<li>\n<p>작업 큐가 현재 들어오는 작업보다 우선</p>\n</li>\n<li>\n<p>이전 작업이 끝난 시점이 다음 들어올 작업 요청시점보다 훨씬 빠를 수 있다는 점 간과X</p>\n</li>\n<li></li>\n</ul>\n<h4 id=\"1-배열로-들어오는-작업들을-클래스로-맵핑-리스트로-만들고-정렬\"><a href=\"#1-%EB%B0%B0%EC%97%B4%EB%A1%9C-%EB%93%A4%EC%96%B4%EC%98%A4%EB%8A%94-%EC%9E%91%EC%97%85%EB%93%A4%EC%9D%84-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A1%9C-%EB%A7%B5%ED%95%91-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B3%A0-%EC%A0%95%EB%A0%AC\" aria-label=\"1 배열로 들어오는 작업들을 클래스로 맵핑 리스트로 만들고 정렬 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) 배열로 들어오는 작업들을 클래스로 맵핑, 리스트로 만들고 정렬</h4>\n<ul>\n<li>인덱스 0은 작업의 요청시점</li>\n<li>인덱스 1은 작업이 걸리는 시간</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 배열 데이터를 클래스로 맵핑</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Task</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> pot<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 요청시점</span>\n    <span class=\"token keyword\">int</span> second<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 걸리는 시간</span>\n    <span class=\"token class-name\">TaskInfo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> pot<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> second<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pot <span class=\"token operator\">=</span> pot<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>second <span class=\"token operator\">=</span> second<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// ...</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> jobs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Task</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> job <span class=\"token operator\">:</span> jobs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">TaskInfo</span><span class=\"token punctuation\">(</span>job<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> job<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    list<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparingInt</span><span class=\"token punctuation\">(</span>q <span class=\"token operator\">-></span> q<span class=\"token punctuation\">.</span>pot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"2-현재-작업때문에-수행못한-작업을-모아둘-큐-구현\"><a href=\"#2-%ED%98%84%EC%9E%AC-%EC%9E%91%EC%97%85%EB%95%8C%EB%AC%B8%EC%97%90-%EC%88%98%ED%96%89%EB%AA%BB%ED%95%9C-%EC%9E%91%EC%97%85%EC%9D%84-%EB%AA%A8%EC%95%84%EB%91%98-%ED%81%90-%EA%B5%AC%ED%98%84\" aria-label=\"2 현재 작업때문에 수행못한 작업을 모아둘 큐 구현 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) 현재 작업때문에 수행못한 작업을 모아둘 큐 구현</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> jobs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token class-name\">Queue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Task</span><span class=\"token punctuation\">></span></span> queue <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PriorityQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparingInt</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">-></span> t<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"3-작업-수행하는-로직---리스트-순회\"><a href=\"#3-%EC%9E%91%EC%97%85-%EC%88%98%ED%96%89%ED%95%98%EB%8A%94-%EB%A1%9C%EC%A7%81---%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%88%9C%ED%9A%8C\" aria-label=\"3 작업 수행하는 로직   리스트 순회 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(3) 작업 수행하는 로직 - 리스트 순회</h4>\n<ul>\n<li>\n<p>일단 이전 작업이 끝난 시점을 저장할 변수가 필요. *</p>\n</li>\n<li>\n<p>큐에 데이터가 있는지 확인한다.(1)</p>\n<ul>\n<li>만약 큐에 데이터가 있으면</li>\n<li>먼저 수행되어야 함으로 큐의 작업을 수행.</li>\n<li>이때 큐의 작업 요청시점이 이전 작업이 끝난 시점보다 크면 누적을 하지 않고 요청시점 + 작업시간으로 끝난 시점 </li>\n<li>만약 큐에 데이터가 없을때는 (2)로 넘어간다.</li>\n</ul>\n</li>\n<li>\n<p>이전 작업이 끝난 시점과 현재 작업의 요청 시점을 비교,(1)</p>\n<ul>\n<li>이미 이전 작업이 끝나있으면, </li>\n</ul>\n</li>\n<li></li>\n<li>\n<p>리스트를 돌때마다 큐에 작업이 있는지 확인</p>\n<ul>\n<li>작업이 있을 경우 큐에 푸쉬</li>\n<li>작업이 없을 경우 </li>\n</ul>\n</li>\n</ul>","headings":[{"value":"디스크 컨트롤러 문제","depth":2},{"value":"문제 해결 단계","depth":2},{"value":"문제 풀이 방법 생각하기.","depth":3},{"value":"(1) 배열로 들어오는 작업들을 클래스로 맵핑, 리스트로 만들고 정렬","depth":4},{"value":"(2) 현재 작업때문에 수행못한 작업을 모아둘 큐 구현","depth":4},{"value":"(3) 작업 수행하는 로직 - 리스트 순회","depth":4}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/blog/algorithm/2019-04-04-디스크컨트롤러-알고리즘-문제/","previous":null}}