{"data":{"markdownRemark":{"frontmatter":{"title":"Spring DI를 위한 Annotation"},"html":"<h1 id=\"spring-의존관계-자동-설정\"><a href=\"#spring-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%9E%90%EB%8F%99-%EC%84%A4%EC%A0%95\" aria-label=\"spring 의존관계 자동 설정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spring 의존관계 자동 설정</h1>\n<h2 id=\"spring-bean-등록\"><a href=\"#spring-bean-%EB%93%B1%EB%A1%9D\" aria-label=\"spring bean 등록 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spring Bean 등록</h2>\n<ul>\n<li>스프링 컨테이너는 base-package의 클래스를 검색해 자동으로 Bean을 등록</li>\n<li>@Component, @Repository, @Service, @Controller, @RestController</li>\n<li>해당 Annotation을 이용, 클래스를 Bean으로 등록할 수 있다.</li>\n<li>XML의 Context파일은 component-scan에 해당 어노테이션을 쓰는 클래스들의 패키지를 등록해야함.</li>\n</ul>\n<h2 id=\"등록된-bean을-이용한-의존관계-자동-설정\"><a href=\"#%EB%93%B1%EB%A1%9D%EB%90%9C-bean%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%9E%90%EB%8F%99-%EC%84%A4%EC%A0%95\" aria-label=\"등록된 bean을 이용한 의존관계 자동 설정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>등록된 Bean을 이용한 의존관계 자동 설정</h2>\n<ul>\n<li>Spring은 의존하는 빈 객체의 타입이나 이름을 이용하여 의존 객체를 자동으로 설정 할 수 있는 기능을 제공한다.</li>\n<li>\n<p>자동설정에는 다음 네 가지 Annotation이 존재한다.</p>\n<blockquote>\n<p>@Autowired, @Inject, @Resource, @Qualifier</p>\n</blockquote>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">@Autowired</th>\n<th align=\"center\">@Inject</th>\n<th align=\"center\">@Resource</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">범용</td>\n<td align=\"center\">Spring</td>\n<td align=\"center\">Java</td>\n<td align=\"center\">Java</td>\n</tr>\n<tr>\n<td align=\"center\">방식</td>\n<td align=\"center\">타입에 맞춰 연결</td>\n<td align=\"center\">타입에 맞춰 연결</td>\n<td align=\"center\">이름에 맞춰 연결</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>@Inject, @Resource는 기존 Java의 Annotation</li>\n<li>@Autowired는 Spring에서 지원하는 Annotation</li>\n<li>보통은 @Autowired와 @Inject은 거의 같다고 봐도 무방할 듯</li>\n<li>@Resource는 타입이 아닌 이름에 맞춰 연결하는 것이 다름</li>\n</ul>\n<h3 id=\"타입에-맞춰-연결-vs-이름에-맞춰-연결\"><a href=\"#%ED%83%80%EC%9E%85%EC%97%90-%EB%A7%9E%EC%B6%B0-%EC%97%B0%EA%B2%B0-vs-%EC%9D%B4%EB%A6%84%EC%97%90-%EB%A7%9E%EC%B6%B0-%EC%97%B0%EA%B2%B0\" aria-label=\"타입에 맞춰 연결 vs 이름에 맞춰 연결 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입에 맞춰 연결 vs 이름에 맞춰 연결</h3>\n<p>다음과 같은 예시의 Context가 설정되 있다고 해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\">// root-context.xml\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>dataSourceSpied<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>org.springframework.jdbc.datasource.DriverManagerDataSource<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>driverClassName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>oracle.jdbc.driver.OracleDriver<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>jdbc:oracle:thin:@localhost:1521/XE<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>ora_user<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>jeong<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>dataSource<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>net.sf.log4jdbc.Log4jdbcProxyDataSource<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>constructor-arg</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>dataSourceSpied<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>logFormatter<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>net.sf.log4jdbc.tools.Log4JdbcCustomFormatter<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>loggingType<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>MULTI_LINE<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sqlPrefix<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>SQL         :  <span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3 id=\"해당-bean들은-datasource라는-인터페이스를-구현한-객체이다\"><a href=\"#%ED%95%B4%EB%8B%B9-bean%EB%93%A4%EC%9D%80-datasource%EB%9D%BC%EB%8A%94-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%9C-%EA%B0%9D%EC%B2%B4%EC%9D%B4%EB%8B%A4\" aria-label=\"해당 bean들은 datasource라는 인터페이스를 구현한 객체이다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해당 Bean들은 DataSource라는 인터페이스를 구현한 객체이다.</h3>\n<ul>\n<li>dataSourceSpied는 DB와 연결하는 객체</li>\n<li>dataSource는 DB와 데이터를 주고받을 때 로그를 찍게 해주는 객체</li>\n</ul>\n<h3 id=\"둘다-datasource타입을-구현한-객체라면-만약에\"><a href=\"#%EB%91%98%EB%8B%A4-datasource%ED%83%80%EC%9E%85%EC%9D%84-%EA%B5%AC%ED%98%84%ED%95%9C-%EA%B0%9D%EC%B2%B4%EB%9D%BC%EB%A9%B4-%EB%A7%8C%EC%95%BD%EC%97%90\" aria-label=\"둘다 datasource타입을 구현한 객체라면 만약에 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>둘다 DataSource타입을 구현한 객체라면 만약에...</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 임의의.class</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> 임의의 <span class=\"token punctuation\">{</span>\n      <span class=\"token annotation punctuation\">@Autowired</span>  <span class=\"token comment\">// @Inject도 가능</span>\n      <span class=\"token keyword\">private</span> <span class=\"token class-name\">DataSource</span> ds<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위와 같이 코드를 했을 경우 에러가 발생한다.</p>\n<h3 id=\"에러의-핵심-내용을-보자면\"><a href=\"#%EC%97%90%EB%9F%AC%EC%9D%98-%ED%95%B5%EC%8B%AC-%EB%82%B4%EC%9A%A9%EC%9D%84-%EB%B3%B4%EC%9E%90%EB%A9%B4\" aria-label=\"에러의 핵심 내용을 보자면 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러의 핵심 내용을 보자면</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">No qualifying bean of type &#39;javax.sql.DataSource&#39; available: expected single matching bean but found 2: dataSource,dataSourceSpied</code></pre></div>\n<p>대충 해석해보면 </p>\n<blockquote>\n<p>1개의 Bean을 기대했는데 2개의 Bean을 발견했다. 그 두개는 dataSource, dataSourceSpied.</p>\n</blockquote>\n<p>DataSource를 구현한 객체가 2개이므로 Bean도 2개를 발견하게 되는 것이다.</p>\n<p>타입에 맞춰 연결을 하게 되어 에러가 발생.</p>\n<p>여기서 @Resource를 사용하여 타입이 아닌 이름으로 설정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 임의의.class</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> 임의의 <span class=\"token punctuation\">{</span>\n      <span class=\"token annotation punctuation\">@Resource</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span> <span class=\"token string\">\"dataSource\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">private</span> <span class=\"token class-name\">DataSource</span> ds<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 또는</span>\n      <span class=\"token annotation punctuation\">@Resource</span>\n      <span class=\"token keyword\">private</span> <span class=\"token class-name\">DataSource</span> dataSource<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>name값을 넣어 맞는 bean의 id를 찾아서 설정하거나,</li>\n<li>변수명과 같은 bean의 id를 찾아 설정.</li>\n</ul>\n<h1 id=\"해결-못한-것들\"><a href=\"#%ED%95%B4%EA%B2%B0-%EB%AA%BB%ED%95%9C-%EA%B2%83%EB%93%A4\" aria-label=\"해결 못한 것들 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결 못한 것들..?</h1>\n<h2 id=\"qualifier\"><a href=\"#qualifier\" aria-label=\"qualifier permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@Qualifier</h2>\n<ul>\n<li>@Autowired, @Inject의 경우에도 @Qualifier를 이용하면 타입 이외에도 다른 연결이 가능하고 하는데...</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// Bird &lt;- Interface</span>\n<span class=\"token comment\">// Chicken, Penguin &lt;- Bird를 구현한 class</span>\n<span class=\"token annotation punctuation\">@Autowired</span>\n<span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"chicken\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Bird</span> penguin<span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와 같이 쓰면 이름에 상관없이 Chicken 타입으로 연결되는 것을 알 수 있습니다.\n이렇게 하면 된다는 데...</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 임의의.class</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> 임의의 <span class=\"token punctuation\">{</span>\n      <span class=\"token annotation punctuation\">@Autowired</span>\n      <span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"log4jdbcProxyDataSource\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 또는 @Qualifier(\"net.sf.log4jdbc.Log4jdbcProxyDataSource\")</span>\n      <span class=\"token keyword\">private</span> <span class=\"token class-name\">DataSource</span> ds<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>파라미터 맨앞이 소문자가 맞는건지도 모르겠고\n소문자면 라이브러리에서 가져오는 건 타입명만 써야되는 건지\n경우의 수가 4개 나오는데 다 에러가 뜸...</p>","headings":[{"value":"Spring 의존관계 자동 설정","depth":1},{"value":"Spring Bean 등록","depth":2},{"value":"등록된 Bean을 이용한 의존관계 자동 설정","depth":2},{"value":"타입에 맞춰 연결 vs 이름에 맞춰 연결","depth":3},{"value":"해당 Bean들은 DataSource라는 인터페이스를 구현한 객체이다.","depth":3},{"value":"둘다 DataSource타입을 구현한 객체라면 만약에...","depth":3},{"value":"에러의 핵심 내용을 보자면","depth":3},{"value":"해결 못한 것들..?","depth":1},{"value":"@Qualifier","depth":2}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/blog/spring/2018-06-08-Spring-DI-Annotation/","next":null}}