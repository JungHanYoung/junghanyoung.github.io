{"data":{"markdownRemark":{"frontmatter":{"title":"블록체인 개념 정립을 위한 자바스크립트 코딩"},"html":"<h2 id=\"block-chain\"><a href=\"#block-chain\" aria-label=\"block chain permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Block Chain</h2>\n<p>관리 대상의 데이터 '블록'이라고 하는 데이터들을 P2P방식으로 생성된 체인 형식의 분산 데이터 저장 환경</p>\n<p>누구라도 데이터를 임의로 수정할 수 없고 누구나 변경 결과를 열람할 수 있는 분산 컴퓨팅 기술 기반의 데이터 위변조 방지 기술</p>\n<h2 id=\"간단한-블록체인-구현\"><a href=\"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%B8%94%EB%A1%9D%EC%B2%B4%EC%9D%B8-%EA%B5%AC%ED%98%84\" aria-label=\"간단한 블록체인 구현 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>간단한 블록체인 구현</h2>\n<ul>\n<li>Node.js를 기반으로 블록체인을 구현할 예정</li>\n<li>Javascript ES6</li>\n<li>SHA256 암호화 알고리즘 모듈 필요</li>\n</ul>\n<h2 id=\"블록의-구성\"><a href=\"#%EB%B8%94%EB%A1%9D%EC%9D%98-%EA%B5%AC%EC%84%B1\" aria-label=\"블록의 구성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>블록의 구성</h2>\n<ul>\n<li>인덱스 : </li>\n<li>타임스탬프 :</li>\n<li>데이터 :</li>\n<li>이전 해쉬 :</li>\n<li>해쉬 :</li>\n<li>연산 횟수 :</li>\n</ul>\n<h2 id=\"블록-구현\"><a href=\"#%EB%B8%94%EB%A1%9D-%EA%B5%AC%ED%98%84\" aria-label=\"블록 구현 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>블록 구현</h2>\n<h3 id=\"블록-속성\"><a href=\"#%EB%B8%94%EB%A1%9D-%EC%86%8D%EC%84%B1\" aria-label=\"블록 속성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>블록 속성</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 클래스 정의\nclass Block {\n    // 생성자\n    constructor(index, timestamp, data, previousHash) {\n        // 인덱스\n        this.index = index;\n        // 타임스탬프\n        this.timestamp = timestampm;\n        // 데이터\n\t\tthis.data = data;\n        // 이전 해쉬\n\t\tthis.previousHash = previousHash;\n        // 해쉬\n\t\tthis.hash = this.calculateHash();\n        // 연산 횟수\n\t\tthis.nonce = 0;\n    }\n}</code></pre></div>\n<ul>\n<li>calculateHash는 현재 들어온 index, timestamp, data, previousHash, hash, nonce를 SHA256 암호화 계산하여 그 값을 리턴한다.</li>\n</ul>\n<h3 id=\"calculatehash-mineblcok-메소드-정의\"><a href=\"#calculatehash-mineblcok-%EB%A9%94%EC%86%8C%EB%93%9C-%EC%A0%95%EC%9D%98\" aria-label=\"calculatehash mineblcok 메소드 정의 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>calculateHash mineBlcok 메소드 정의</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import SHA256 from &#39;crypto-js/sha256&#39;;\n\nclass Block {\n    // ...생성자\n    constructor(index, timestamp, data, previousHash) { ... }\n    // 해쉬 계산 메소드\n    calculateHash() {\n        return SHA256(this.index + this.previousHash + this.timestamp + this.data + this.nonce).toString();\n    }\n    // 블록 채굴 메소드\n    mineBlock(difficulty) {\n        // 0 ~ difficulty\n        while(this.hash.substring(0, difficulty) !== Array(difficulty + 1).join(&#39;0&#39;)) {\n            this.nonce++;\n            this.hash = this.calculateHash();\n        }\n\n        console.log(&#39;Block mined &#39; + this.hash);\n    }\n}</code></pre></div>\n<ul>\n<li>블록 채굴 메소드 mineBlock은 다음에 정의될 블록체인에서 난이도(difficulty)를 변수로 받는다.</li>\n<li>해쉬 문자열에서 난이도만큼의 문자를 비교</li>\n</ul>\n<h3 id=\"블록-채굴-원리\"><a href=\"#%EB%B8%94%EB%A1%9D-%EC%B1%84%EA%B5%B4-%EC%9B%90%EB%A6%AC\" aria-label=\"블록 채굴 원리 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>블록 채굴 원리</h3>\n<p>difficulty = 2인 경우</p>\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n -->\n<!-- Title: G Pages: 1 -->\n<svg width=\"412pt\" height=\"260pt\"\n viewBox=\"0.00 0.00 411.57 260.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 256)\">\n<title>G</title>\n<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-256 407.5672,-256 407.5672,4 -4,4\"/>\n<!-- 해쉬계산 -->\n<g id=\"node1\" class=\"node\">\n<title>해쉬계산</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"63.0768\" cy=\"-234\" rx=\"49.2842\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"63.0768\" y=\"-229.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">해쉬계산</text>\n</g>\n<!-- 연산횟수증가 -->\n<g id=\"node2\" class=\"node\">\n<title>연산횟수증가</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"63.0768\" cy=\"-162\" rx=\"63.1537\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"63.0768\" y=\"-157.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">연산횟수증가</text>\n</g>\n<!-- 해쉬계산&#45;&gt;연산횟수증가 -->\n<g id=\"edge1\" class=\"edge\">\n<title>해쉬계산&#45;&gt;연산횟수증가</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M63.0768,-215.8314C63.0768,-208.131 63.0768,-198.9743 63.0768,-190.4166\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"66.5769,-190.4132 63.0768,-180.4133 59.5769,-190.4133 66.5769,-190.4132\"/>\n</g>\n<!-- main -->\n<g id=\"node3\" class=\"node\">\n<title>main</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"258.0768\" cy=\"-234\" rx=\"30.1958\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"258.0768\" y=\"-229.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">main</text>\n</g>\n<!-- parse -->\n<g id=\"node4\" class=\"node\">\n<title>parse</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"213.0768\" cy=\"-162\" rx=\"31.3179\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"213.0768\" y=\"-157.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">parse</text>\n</g>\n<!-- main&#45;&gt;parse -->\n<g id=\"edge2\" class=\"edge\">\n<title>main&#45;&gt;parse</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M247.4124,-216.937C241.9999,-208.277 235.31,-197.5731 229.2773,-187.9207\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"232.2453,-186.0657 223.9772,-179.4407 226.3093,-189.7757 232.2453,-186.0657\"/>\n</g>\n<!-- init -->\n<g id=\"node6\" class=\"node\">\n<title>init</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"154.0768\" cy=\"-90\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"154.0768\" y=\"-85.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">init</text>\n</g>\n<!-- main&#45;&gt;init -->\n<g id=\"edge4\" class=\"edge\">\n<title>main&#45;&gt;init</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M232.1429,-224.0956C212.8757,-215.3876 187.5253,-200.83 173.0768,-180 160.5406,-161.9268 155.994,-137.2489 154.4687,-118.305\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"157.955,-117.9629 153.8913,-108.1784 150.9664,-118.3614 157.955,-117.9629\"/>\n</g>\n<!-- cleanup -->\n<g id=\"node7\" class=\"node\">\n<title>cleanup</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"303.0768\" cy=\"-162\" rx=\"41.1316\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"303.0768\" y=\"-157.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">cleanup</text>\n</g>\n<!-- main&#45;&gt;cleanup -->\n<g id=\"edge5\" class=\"edge\">\n<title>main&#45;&gt;cleanup</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M268.7412,-216.937C274.1537,-208.277 280.8436,-197.5731 286.8764,-187.9207\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"289.8444,-189.7757 292.1764,-179.4407 283.9084,-186.0657 289.8444,-189.7757\"/>\n</g>\n<!-- printf -->\n<g id=\"node9\" class=\"node\">\n<title>printf</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"371.0768\" cy=\"-18\" rx=\"32.4808\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"371.0768\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">printf</text>\n</g>\n<!-- main&#45;&gt;printf -->\n<g id=\"edge9\" class=\"edge\">\n<title>main&#45;&gt;printf</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M285.4021,-226.117C307.5014,-218.2219 337.4273,-203.7675 353.0768,-180 379.6872,-139.586 378.7797,-80.8842 375.243,-46.3558\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"378.6752,-45.5726 374.0339,-36.0486 371.7229,-46.3883 378.6752,-45.5726\"/>\n</g>\n<!-- execute -->\n<g id=\"node5\" class=\"node\">\n<title>execute</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"258.0768\" cy=\"-90\" rx=\"40.548\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"258.0768\" y=\"-85.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">execute</text>\n</g>\n<!-- parse&#45;&gt;execute -->\n<g id=\"edge3\" class=\"edge\">\n<title>parse&#45;&gt;execute</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M223.7412,-144.937C229.1537,-136.277 235.8436,-125.5731 241.8764,-115.9207\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"244.8444,-117.7757 247.1764,-107.4407 238.9084,-114.0657 244.8444,-117.7757\"/>\n</g>\n<!-- make_string -->\n<g id=\"node8\" class=\"node\">\n<title>make_string</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"154.0768\" cy=\"-18\" rx=\"58.5482\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"154.0768\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">make_string</text>\n</g>\n<!-- execute&#45;&gt;make_string -->\n<g id=\"edge6\" class=\"edge\">\n<title>execute&#45;&gt;make_string</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M236.0211,-74.7307C221.6327,-64.7695 202.6044,-51.596 186.5061,-40.451\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"188.1262,-37.3158 177.9121,-34.5013 184.1417,-43.0711 188.1262,-37.3158\"/>\n</g>\n<!-- execute&#45;&gt;printf -->\n<g id=\"edge7\" class=\"edge\">\n<title>execute&#45;&gt;printf</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M281.4905,-75.0816C298.7907,-64.0584 322.481,-48.9637 341.1549,-37.0653\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"343.0515,-40.007 349.6043,-31.6816 339.29,-34.1035 343.0515,-40.007\"/>\n</g>\n<!-- compare -->\n<g id=\"node10\" class=\"node\">\n<title>compare</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"275.0768\" cy=\"-18\" rx=\"44.0622\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"275.0768\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">compare</text>\n</g>\n<!-- execute&#45;&gt;compare -->\n<g id=\"edge10\" class=\"edge\">\n<title>execute&#45;&gt;compare</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M262.3666,-71.8314C264.1848,-64.131 266.3468,-54.9743 268.3673,-46.4166\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"271.8376,-46.95 270.7292,-36.4133 265.0249,-45.3414 271.8376,-46.95\"/>\n</g>\n<!-- init&#45;&gt;make_string -->\n<g id=\"edge8\" class=\"edge\">\n<title>init&#45;&gt;make_string</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M154.0768,-71.8314C154.0768,-64.131 154.0768,-54.9743 154.0768,-46.4166\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"157.5769,-46.4132 154.0768,-36.4133 150.5769,-46.4133 157.5769,-46.4132\"/>\n</g>\n</g>\n</svg>\n\n<blockquote>\n<p>계산된 해쉬 <span style='color: red;'>c6</span>2b8e4162c75e1fe45dad6af8fcd2672a258941af50ee87f19eacfc190c2ce3</p>\n<p>nonce(연산횟수) 증가</p>\n<p>해쉬 문자열 앞 2개의 문자가 '00'인지 비교</p>\n<p> 다를 경우 업데이트된 nonce(연산횟수)에 따라 해쉬 재적용</p>\n<p>같은 경우 채굴 완료</p>\n<p>같을 때까지 해당 로직을 반복</p>\n</blockquote>\n<h2 id=\"블록체인-구현\"><a href=\"#%EB%B8%94%EB%A1%9D%EC%B2%B4%EC%9D%B8-%EA%B5%AC%ED%98%84\" aria-label=\"블록체인 구현 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>블록체인 구현</h2>\n<h3 id=\"블록체인-구성\"><a href=\"#%EB%B8%94%EB%A1%9D%EC%B2%B4%EC%9D%B8-%EA%B5%AC%EC%84%B1\" aria-label=\"블록체인 구성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>블록체인 구성</h3>\n<ul>\n<li>chain : 블록들의 배열</li>\n<li>difficulty : 블록체인의 난이도</li>\n</ul>\n<p>블록체인을 만들기 위해선 이전에 초기 블록을 추가시켜 주어야 하므로</p>\n<p>블록체인 생성시 chain속성에 의미없는 블록을 추가해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class BlockChain {\n    constructor() {\n        this.chain = [ this.createGenesisBlock() ];\n        this.difficulty = 2;    // 임의로 지정한 것\n    }\n    // \n    createGenesisBlock() {\n        return new Block(0, &#39;01/01/2018&#39;, &#39;GenesisBlock&#39;, &#39;0&#39;);\n    }\n}</code></pre></div>\n<h3 id=\"블록체인에-블록-추가-메소드\"><a href=\"#%EB%B8%94%EB%A1%9D%EC%B2%B4%EC%9D%B8%EC%97%90-%EB%B8%94%EB%A1%9D-%EC%B6%94%EA%B0%80-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"블록체인에 블록 추가 메소드 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>블록체인에 블록 추가 메소드</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class BlockChain {\n    // ...생성자\n    ...\n    // 최근 추가된 블록 찾기\n    getLatestBlock() {\n\t\treturn this.chain[this.chain.length - 1];\n\t}\n    // 블록 추가 메소드\n    addBlock(newBlock) {\n\t\tnewBlock.previousHash = this.getLatestBlock().hash;\n\t\tnewBlock.mineBlock(this.difficulty);\n\t\tthis.chain.push(newBlock);\n\t}\n}</code></pre></div>\n<ul>\n<li>블록 추가시 이전 블록의 해쉬를 참조해야한다.</li>\n<li>추가되는 블록은 채굴 로직을 수행해야한다.</li>\n<li>채굴 완료시 블록체인에 블록을 추가한다.</li>\n</ul>\n<h3 id=\"블록체인-유효성-검사\"><a href=\"#%EB%B8%94%EB%A1%9D%EC%B2%B4%EC%9D%B8-%EC%9C%A0%ED%9A%A8%EC%84%B1-%EA%B2%80%EC%82%AC\" aria-label=\"블록체인 유효성 검사 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>블록체인 유효성 검사</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class BlockChain {\n    ...\n    isChainValid() {\n        for (let i = 1; i &lt; this.chain.length; i++) {\n\t\t\tconst currentBlock = this.chain[i];\n\t\t\tconst previousBlock = this.chain[i - 1];\n\n\t\t\tif (currentBlock.hash !== currentBlock.calculateHash()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (currentBlock.previousHash !== previousBlock.hash) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n    }\n}</code></pre></div>\n<ul>\n<li>체인으로 걸려있는 해쉬들을 다시 비교하여 블록체인이 유효한지 검사한다.</li>\n</ul>\n<h2 id=\"구현된-블록체인-생성하고-블록-추가해보기\"><a href=\"#%EA%B5%AC%ED%98%84%EB%90%9C-%EB%B8%94%EB%A1%9D%EC%B2%B4%EC%9D%B8-%EC%83%9D%EC%84%B1%ED%95%98%EA%B3%A0-%EB%B8%94%EB%A1%9D-%EC%B6%94%EA%B0%80%ED%95%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"구현된 블록체인 생성하고 블록 추가해보기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구현된 블록체인 생성하고 블록 추가해보기</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let testChain = new BlockChain();\n\nconsole.time(&#39;Mining block 1&#39;);\nconsole.log(&#39;Mining block 1...&#39;);\ntestChain.addBlock(new Block(1, &#39;10/08/2017&#39;, { amount: 4 }));\nconsole.timeEnd(&#39;Mining block 1&#39;);\n\nconsole.time(&#39;Mining block 2&#39;);\nconsole.log(&#39;Mining block 2...&#39;);\ntestChain.addBlock(new Block(2, &#39;12/10/2017&#39;, { amount: 10 }));\nconsole.timeEnd(&#39;Mining block 2&#39;);\n\nconsole.log(JSON.stringify(testChain, null, 4));\n\nconsole.log(&#39;Is blockchain valid? &#39; + testChain.isChainValid());</code></pre></div>\n<h3 id=\"출력결과\"><a href=\"#%EC%B6%9C%EB%A0%A5%EA%B2%B0%EA%B3%BC\" aria-label=\"출력결과 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력결과</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Mining block 1...\nBlock minded 008184e0a5f7a9bc36ef14d2bfdc51e41acc25588572a5417d118d3883bbc6bb\nMining block 1: 24.866ms\nMining block 2...\nBlock minded 0065bf0059bf0d3765b7c63a349fe31d2f68690642c83f2d4bbcb4140f132693\nMining block 2: 8.445ms\n{\n    &quot;chain&quot;: [\n        {\n            &quot;index&quot;: 0,\n            &quot;timestampm&quot;: &quot;01/01/2017&quot;,\n            &quot;data&quot;: &quot;Genesis block&quot;,\n            &quot;previousHash&quot;: &quot;0&quot;,\n            &quot;hash&quot;: &quot;c62b8e4162c75e1fe45dad6af8fcd2672a258941af50ee87f19eacfc190c2ce3&quot;,\n            &quot;nonce&quot;: 0\n        },\n        {\n            &quot;index&quot;: 1,\n            &quot;timestampm&quot;: &quot;10/08/2017&quot;,\n            &quot;data&quot;: {\n                &quot;amount&quot;: 4\n            },\n            &quot;previousHash&quot;: &quot;c62b8e4162c75e1fe45dad6af8fcd2672a258941af50ee87f19eacfc190c2ce3&quot;,\n            &quot;hash&quot;: &quot;008184e0a5f7a9bc36ef14d2bfdc51e41acc25588572a5417d118d3883bbc6bb&quot;,\n            &quot;nonce&quot;: 157\n        },\n        {\n            &quot;index&quot;: 2,\n            &quot;timestampm&quot;: &quot;12/10/2017&quot;,\n            &quot;data&quot;: {\n                &quot;amount&quot;: 10\n            },\n            &quot;previousHash&quot;: &quot;008184e0a5f7a9bc36ef14d2bfdc51e41acc25588572a5417d118d3883bbc6bb&quot;,\n            &quot;hash&quot;: &quot;0065bf0059bf0d3765b7c63a349fe31d2f68690642c83f2d4bbcb4140f132693&quot;,\n            &quot;nonce&quot;: 151\n        }\n    ],\n    &quot;difficulty&quot;: 2\n}\nIs blockchain valid? true</code></pre></div>\n<br/>\n<h2 id=\"난이도에-따른-채굴속도-체크\"><a href=\"#%EB%82%9C%EC%9D%B4%EB%8F%84%EC%97%90-%EB%94%B0%EB%A5%B8-%EC%B1%84%EA%B5%B4%EC%86%8D%EB%8F%84-%EC%B2%B4%ED%81%AC\" aria-label=\"난이도에 따른 채굴속도 체크 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>난이도에 따른 채굴속도 체크</h2>\n<h3 id=\"code\"><a href=\"#code\" aria-label=\"code permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Code</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import { Block, BlockChain } from &#39;./index&#39;;\n\nlet blockChain2 = new BlockChain();\nlet blockChain5 = new BlockChain();\n\nblockChain2.difficulty = 2;\nblockChain5.difficulty = 5;\n\nconsole.time(&#39;blockchain2 mine&#39;);\nblockChain2.addBlock(new Block(1, &#39;01/01/2018&#39;, { amount: 5 }));\nconsole.timeEnd(&#39;blockchain2 mine&#39;);\n\nconsole.time(&#39;blockchain5 mine&#39;);\nblockChain5.addBlock(new Block(1, &#39;01/01/2018&#39;, { amount: 5 }));\nconsole.timeEnd(&#39;blockchain5 mine&#39;);</code></pre></div>\n<h3 id=\"출력\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Block minded 007dd67f313dcf9f864f81879f2640cf1bfb731760cf72b50059d7aa7ba3540f\nblockchain2 mine: 43.624ms\nBlock minded 0000084b77bcac70df92bc928d063d73d24191a7d1c76306f3dcd75c5cec49a0\nblockchain5 mine: 10741.946ms</code></pre></div>","headings":[{"value":"Block Chain","depth":2},{"value":"간단한 블록체인 구현","depth":2},{"value":"블록의 구성","depth":2},{"value":"블록 구현","depth":2},{"value":"블록 속성","depth":3},{"value":"calculateHash mineBlcok 메소드 정의","depth":3},{"value":"블록 채굴 원리","depth":3},{"value":"블록체인 구현","depth":2},{"value":"블록체인 구성","depth":3},{"value":"블록체인에 블록 추가 메소드","depth":3},{"value":"블록체인 유효성 검사","depth":3},{"value":"구현된 블록체인 생성하고 블록 추가해보기","depth":2},{"value":"출력결과","depth":3},{"value":"난이도에 따른 채굴속도 체크","depth":2},{"value":"Code","depth":3},{"value":"출력","depth":3}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/blog/javascript/2018-06-29-Block-Chain-간단-구현/","previous":{"node":{"id":"8160b41e-aad8-509f-bfaf-902871107429","frontmatter":{"title":"JWT를 이용한 token 인증 구현해보기.","category":"node-express","date":"2018-06-17 07:49:00 +0300"},"fields":{"slug":"/posts/blog/node-express/2018-06-17-jwt를-이용한-token인증/"}}},"next":{"node":{"id":"39354791-87e9-5161-97d2-82e4b823a62a","frontmatter":{"title":"자바스크립트에서 객체를 만드는 법 1","category":"javascript","date":"2018-06-26"},"fields":{"slug":"/posts/blog/javascript/2018-06-26-자바스크립트-객체-정의/"}}}}}