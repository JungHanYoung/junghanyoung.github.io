{"data":{"markdownRemark":{"id":"d980a891-2c91-5942-9e83-db7f847d9ed2","frontmatter":{"title":"OAuth2 인증방식의 이해"},"html":"<blockquote>\n<p>내 맘대로 정리이니 🐶소리가 섞여있을 수 있습니다. 또 저는 맞는 말만 하는 것이 아니니 처음 보시는 분은 편하게 봐주시길..</p>\n<p>피드백은 언제나 환영입니다ㅠㅠ 저에게 공부가 됩니다!</p>\n</blockquote>\n<h2 id=\"oauth2-인증방식의-이해\"><a href=\"#oauth2-%EC%9D%B8%EC%A6%9D%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%9D%B4%ED%95%B4\" aria-label=\"oauth2 인증방식의 이해 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OAuth2 인증방식의 이해</h2>\n<p>Google, Facebook, Twiter와 같은 서비스에 회원인증을 위임할 수 있게 해주는 인증방식. 사용자의 민감한 정보를 개발하는 서비스가 애초에 접근하지 않고 OAuth2 서비스를 제공하는 제공자에 위임하므로 책임을 좀더 회피할 수 있게 됨.</p>\n<h3 id=\"oauth2의-인증방식-flow\"><a href=\"#oauth2%EC%9D%98-%EC%9D%B8%EC%A6%9D%EB%B0%A9%EC%8B%9D-flow\" aria-label=\"oauth2의 인증방식 flow permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OAuth2의 인증방식 Flow</h3>\n<ul>\n<li>\n<p>User(사용자)</p>\n</li>\n<li>\n<p>개발중인 서비스</p>\n</li>\n<li>\n<p>OAuth2를 지원하는 제공자 (google, facebook, ...등등)</p>\n</li>\n<li>\n<p>먼저 User가 A로 부터 google 로그인을 시도.</p>\n</li>\n<li>\n<p>A는 google에 로그인폼을 요청, 사용자에게 전달한다.</p>\n</li>\n<li>\n<p>User는 google 로그인폼 확인.</p>\n</li>\n<li>\n<p>google 로그인.</p>\n</li>\n<li>\n<p>google은 해당 정보 인증.</p>\n</li>\n<li>\n<p>인증되면 google은 A에 access_token을 발급.</p>\n</li>\n<li>\n<p>A는 해당 토큰을 통해 인증확인</p>\n<ol>\n<li>이제 세션에 토큰을 가지고 있던지 cookie로 토큰발급하게 하던지 ㅇㅇ</li>\n</ol>\n</li>\n</ul>\n<p>여기서 개발되는 서비스는 사용자의 google 아이디, 비밀번호를 볼 수 없게 되어있다.</p>\n<p>일단 이렇게 정리가 되는데 보통 백엔드에서 코드를 구현할 때에는 flow(흐름)를 아는 것도 중요하지만 용어나 라이브러리를 어떻게 쓰는지가 중요해보임. flow는 기본적인 것..</p>\n<h3 id=\"spring-boot에서-구현하기\"><a href=\"#spring-boot%EC%97%90%EC%84%9C-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"spring boot에서 구현하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spring Boot에서 구현하기.</h3>\n<p>이는 아직 이해가 안되어있으니 일단 이해가 된 부분부터 차례로 정리하도록 하겠음.</p>\n<h4 id=\"구현하기-전에-정리할-용어들\"><a href=\"#%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EC%A0%84%EC%97%90-%EC%A0%95%EB%A6%AC%ED%95%A0-%EC%9A%A9%EC%96%B4%EB%93%A4\" aria-label=\"구현하기 전에 정리할 용어들 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구현하기 전에 정리할 용어들</h4>\n<ul>\n<li>Authorization: 허가 - 로그인 후 해당 회원의 인증 허가를 주는 것. - 액세스토큰 확인?</li>\n<li>Authentication: 인증 - 로그인 </li>\n</ul>\n<h4 id=\"구현\"><a href=\"#%EA%B5%AC%ED%98%84\" aria-label=\"구현 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구현</h4>\n<ul>\n<li>Spring Boot</li>\n<li>Spring Security</li>\n<li>Spring Security OAuth2</li>\n</ul>\n<h5 id=\"시큐리티-설정\"><a href=\"#%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-%EC%84%A4%EC%A0%95\" aria-label=\"시큐리티 설정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시큐리티 설정</h5>\n<ul>\n<li>\n<p>시큐리티 설정에서 http configure메소드를 구현할때 oauth2Login()에서부터 시작된다.</p>\n<ul>\n<li>\n<p>oauth2Login으로 붙는 메소드는</p>\n<ul>\n<li>authorizationEndpoint: 액세스토큰을 인증하는 곳..?</li>\n<li>authorizationRequestRepository: 인증요청을 저장할 저장소..?</li>\n<li>redirectionEndpoint: OAuth2 로그인을 성공하면 리다이렉트될 곳</li>\n<li>\n<p>userInfoEndpoint: OAuth2 인증후 사용자정보를 load하는 곳</p>\n<ul>\n<li>OAuth2UserService</li>\n</ul>\n</li>\n<li>successHandler: 유저정보까지 성공적으로 load되면 실행될 핸들러</li>\n<li>FailureHandler: 도중 Exception을 받을 핸들러</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>대~충 이런데 맞는 지 잘 모르겟다. 좀 더 코드를 뒤집어까봐야될거가틈.</p>\n<h5 id=\"oauth2userservice\"><a href=\"#oauth2userservice\" aria-label=\"oauth2userservice permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OAuth2UserService</h5>\n<p>토큰을 발급받고, 유저정보를 조회하는 과정을 수행하는 서비스로 보인다.</p>\n<ul>\n<li>OAuth2인증이 성공적으로 이루어지면, 해당 서비스로 유저정보 조회 - 시큐리티설정에서 userInfoEndpoint에 추가한 것으로 이렇게 추측되어짐.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token annotation punctuation\">@RequiredArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomOAuth2UserService</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DefaultOAuth2UserService</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">UserRepository</span> userRepository<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">OAuth2User</span> <span class=\"token function\">loadUser</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OAuth2UserRequest</span> userRequest<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">OAuth2AuthenticationException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">OAuth2User</span> oAuth2User <span class=\"token operator\">=</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadUser</span><span class=\"token punctuation\">(</span>userRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">processOAuth2User</span><span class=\"token punctuation\">(</span>userRequest<span class=\"token punctuation\">,</span> oAuth2User<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InternalAuthenticationServiceException</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">.</span><span class=\"token function\">getCause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">OAuth2User</span> <span class=\"token function\">processOAuth2User</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OAuth2UserRequest</span> oAuth2UserRequest<span class=\"token punctuation\">,</span> <span class=\"token class-name\">OAuth2User</span> oAuth2User<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">OAuth2UserInfo</span> oAuth2UserInfo <span class=\"token operator\">=</span> <span class=\"token class-name\">OAuth2UserInfoFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getOAuth2UserInfo</span><span class=\"token punctuation\">(</span>oAuth2UserRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getClientRegistration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegistrationId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> oAuth2User<span class=\"token punctuation\">.</span><span class=\"token function\">getAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>oAuth2UserInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getEmail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OAuth2AuthenticationProcessingException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Email not found from OAuth2 provider\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> userOptional <span class=\"token operator\">=</span> userRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findByEmail</span><span class=\"token punctuation\">(</span>oAuth2UserInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getEmail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">User</span> user<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>userOptional<span class=\"token punctuation\">.</span><span class=\"token function\">isPresent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            user <span class=\"token operator\">=</span> userOptional<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AuthProvider</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>oAuth2UserRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getClientRegistration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegistrationId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OAuth2AuthenticationProcessingException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Looks like you're signed up with \"</span>\n                        <span class=\"token operator\">+</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">getProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" account, Please use your \"</span> <span class=\"token operator\">+</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">getProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" account to login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            user <span class=\"token operator\">=</span> <span class=\"token function\">updateExistingUser</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> oAuth2UserInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            user <span class=\"token operator\">=</span> <span class=\"token function\">registerNewUser</span><span class=\"token punctuation\">(</span>oAuth2UserRequest<span class=\"token punctuation\">,</span> oAuth2UserInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">UserPrincipal</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> oAuth2User<span class=\"token punctuation\">.</span><span class=\"token function\">getAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">User</span> <span class=\"token function\">registerNewUser</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OAuth2UserRequest</span> oAuth2UserRequest<span class=\"token punctuation\">,</span> <span class=\"token class-name\">OAuth2UserInfo</span> oAuth2UserInfo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">provider</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AuthProvider</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>oAuth2UserRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getClientRegistration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegistrationId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">providerId</span><span class=\"token punctuation\">(</span>oAuth2UserInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span>oAuth2UserInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">email</span><span class=\"token punctuation\">(</span>oAuth2UserInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getEmail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">imageUrl</span><span class=\"token punctuation\">(</span>oAuth2UserInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getImageUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> userRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">User</span> <span class=\"token function\">updateExistingUser</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> existingUser<span class=\"token punctuation\">,</span> <span class=\"token class-name\">OAuth2UserInfo</span> oAuth2UserInfo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        existingUser<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>oAuth2UserInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        existingUser<span class=\"token punctuation\">.</span><span class=\"token function\">setImageUrl</span><span class=\"token punctuation\">(</span>oAuth2UserInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getImageUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> userRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>existingUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>DefaultOAuth2UserService상속, 부모클래스의 loadUser실행, 불러들인 User를 가지고 커스터마이징</p>\n</li>\n<li>\n<p>어떠한 것을 커스터마이징했는가.</p>\n<ul>\n<li>유저정보에서 이메일을 가지고 DB조회</li>\n<li>유저가 존재하고 조회된 것과 로그인 성공한 것과 provider(google, facebook등)를 비교, </li>\n<li>oauth는 달라도 이메일이 같을 수 있음. (필자는 google, github 이메일이 같아 github계정을 못만듬.)</li>\n<li>해당 유저정보를 데이터베이스에 저장.</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"jwt토큰-검증-및-발급-처리tokenauthenticationfilter\"><a href=\"#jwt%ED%86%A0%ED%81%B0-%EA%B2%80%EC%A6%9D-%EB%B0%8F-%EB%B0%9C%EA%B8%89-%EC%B2%98%EB%A6%ACtokenauthenticationfilter\" aria-label=\"jwt토큰 검증 및 발급 처리tokenauthenticationfilter permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JWT토큰 검증 및 발급 처리(TokenAuthenticationFilter)</h5>\n<ul>\n<li>발급받은 토큰이 유효한 토큰인지 확인해주는 필터</li>\n</ul>\n<p>이 필터는 UsernamePasswordAuthenticationFilter 클래스 앞에 나오게 하여 일반적인 로그인보다 더 앞서 OAuth2로그인을 확인하겠다는(?) 필터</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TokenAuthenticationFilter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">OncePerRequestFilter</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">TokenProvider</span> tokenProvider<span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">CustomUserDetailsService</span> customUserDetailsService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TokenAuthenticationFilter</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doFilterInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FilterChain</span> chain<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">String</span> jwt <span class=\"token operator\">=</span> <span class=\"token function\">getJwtFromRequest</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasText</span><span class=\"token punctuation\">(</span>jwt<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> tokenProvider<span class=\"token punctuation\">.</span><span class=\"token function\">validateToken</span><span class=\"token punctuation\">(</span>jwt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token class-name\">Long</span> userId <span class=\"token operator\">=</span> tokenProvider<span class=\"token punctuation\">.</span><span class=\"token function\">getUserIdFromToken</span><span class=\"token punctuation\">(</span>jwt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token class-name\">UserDetails</span> userDetails <span class=\"token operator\">=</span> customUserDetailsService<span class=\"token punctuation\">.</span><span class=\"token function\">loadUserById</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">UsernamePasswordAuthenticationToken</span> authenticationToken <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UsernamePasswordAuthenticationToken</span><span class=\"token punctuation\">(</span>userDetails<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> userDetails<span class=\"token punctuation\">.</span><span class=\"token function\">getAuthorities</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                authenticationToken<span class=\"token punctuation\">.</span><span class=\"token function\">setDetails</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">WebAuthenticationDetailsSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">buildDetails</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token class-name\">SecurityContextHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAuthentication</span><span class=\"token punctuation\">(</span>authenticationToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"유저 인증 정보를 설정할 수 없습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        chain<span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getJwtFromRequest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span> bearerToken <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Authorization\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasText</span><span class=\"token punctuation\">(</span>bearerToken<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> bearerToken<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bearer \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> bearerToken<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>Authorization 헤더로 들어온 JWT토큰을 검증.</li>\n<li>유저 id로 유저정보를 가져옴(DB에서 가져오게 되어있음.)</li>\n<li>인증토큰을 만듬(UsernamePasswordAuthenticationToken)</li>\n<li>해당 토큰을 통해 시큐리티 context에 인증되었다!는 것을 적용시켜 다음 UsernamePassword 인증필터에 막히지않게함.</li>\n</ol>","headings":[{"value":"OAuth2 인증방식의 이해","depth":2},{"value":"OAuth2의 인증방식 Flow","depth":3},{"value":"Spring Boot에서 구현하기.","depth":3},{"value":"구현하기 전에 정리할 용어들","depth":4},{"value":"구현","depth":4},{"value":"시큐리티 설정","depth":5},{"value":"OAuth2UserService","depth":5},{"value":"JWT토큰 검증 및 발급 처리(TokenAuthenticationFilter)","depth":5}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/blog/2019-04-30-oauth2-인증방식의-이해/","previous":{"node":{"id":"6f11d351-1614-53b4-9b4d-af4788d26426","frontmatter":{"title":"카카오프렌즈 컬러링북 알고리즘 문제풀이 - 프로그래머스 Level 3 (테스트 O, 채점 X)","category":"algorithm","date":"2019-04-10","tags":["programmers","algorithm"]},"fields":{"slug":"/posts/blog/algorithm/2019-04-10-카카오프렌즈컬러링북-알고리즘-문제풀이/"}}},"next":{"node":{"id":"ec9138b1-7e06-5137-bf86-de0132420c8a","frontmatter":{"title":"Spring Tiles 적용","category":"spring","date":"2019-05-02","tags":["Spring","DI","tiles"]},"fields":{"slug":"/posts/blog/spring/2019-05-02-spring-tiles-적용/"}}}}}