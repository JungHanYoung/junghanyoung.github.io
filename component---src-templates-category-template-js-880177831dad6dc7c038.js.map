{"version":3,"sources":["webpack:///./src/components/common/PostCard.jsx","webpack:///./src/components/category/Content.jsx","webpack:///./src/templates/category-template.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/common/NavBar.jsx","webpack:///./src/components/category/Index.jsx","webpack:///./src/components/category/Layout.jsx"],"names":["PostCard","_ref","content","react_default","a","createElement","className","gatsby_browser_entry","to","node","fields","slug","frontmatter","title","date","excerpt","propTypes","PropTypes","shape","id","string","isRequired","Content","_ref$posts","posts","map","post","common_PostCard","key","arrayOf","__webpack_require__","d","__webpack_exports__","query","CategoryTemplate","pageContext","data","postNodes","location","allMarkdownRemark","edges","category","Layout","category_Content","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","object","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","NavBar","href","Index","_ref$categories","categories","Fragment","common_NavBar","category_Index"],"mappings":"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","file":"component---src-templates-category-template-js-880177831dad6dc7c038.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby';\n\nconst PostCard = ({ content }) => {\n    return (\n        <li className=\"item  item--post\">\n            <Link to={content.node.fields.slug}>\n                <article className=\"article  article--post  typeset\">\n                    <h3>{content.node.frontmatter.title}</h3>\n                    <small className=\"small post-mata\">{content.node.frontmatter.date}</small>\n                    <p>\n                        {content.node.excerpt}\n                    </p>\n                </article>\n            </Link>\n        </li>\n    )\n}\n\nPostCard.propTypes = {\n    content: PropTypes.shape({\n        node: PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                date: PropTypes.string.isRequired,\n            }).isRequired,\n            fields: PropTypes.shape({\n                slug: PropTypes.string.isRequired\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired\n        })\n    })\n}\n\nexport default PostCard","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport PostCard from '../common/PostCard'\n\nconst Content = ({ posts = [], title }) => {\n    return (\n        <div className=\"content\">\n            <article className=\"article  article--page  typeset\">\n                <h2>{title}</h2>\n            </article>\n            <ul className=\"list  list--posts\">\n                {posts.map(post =>\n                    <PostCard\n                        key={post.node.id}\n                        content={post}\n                    />)}\n            </ul>\n        </div>\n    )\n}\n\nContent.propTypes = {\n    posts: PropTypes.arrayOf(PropTypes.shape({\n        node: PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                date: PropTypes.string.isRequired\n            }).isRequired,\n            fields: PropTypes.shape({\n                slug: PropTypes.string.isRequired\n            })\n        })\n    })),\n    title: PropTypes.string\n}\n\nexport default Content","import React from 'react'\n\nimport Layout from '../components/category/Layout'\nimport Content from '../components/category/Content'\nimport { graphql } from 'gatsby';\n\nconst CategoryTemplate = ({ pageContext, data, location }) => {\n\n    const postNodes = data.allMarkdownRemark.edges\n    const { category } = pageContext\n\n    return (\n        <Layout>\n            <Content\n                posts={postNodes}\n                title={category || 'general'}\n            />\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n    query getPostsByCategory($category: String) {\n        allMarkdownRemark(filter: { frontmatter: { category: {eq: $category}}}) {\n            edges { \n                node{\n                    id\n                    frontmatter {\n                        title\n                        date\n                    }\n                    excerpt\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport default CategoryTemplate","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby';\n\nconst NavBar = () => {\n    return (\n        <header className=\"header\">\n            <div className=\"container\">\n                <Link className=\"logo\" to=\"/\">\n                    logo\n                </Link>\n                <ul className=\"list list--nav\">\n                    <li className=\"item item--nav item--current\">\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li className=\"item item--nav\">\n                        <Link to=\"/about\">About</Link>\n                    </li>\n                    <li className=\"item item--nav\">\n                        <Link to=\"/category\">Category</Link>\n                    </li>\n                    <li className=\"item item--nav\">\n                        <a href=\"/TIL\">TIL</a>\n                    </li>\n                </ul>\n            </div>\n        </header>\n    )\n}\n\nexport default NavBar","import React from 'react'\nimport { Link } from 'gatsby';\n\nconst Index = ({ categories = [\"TIL\"] }) => {\n    return (\n        <aside className=\"aside typeset aside--left\">\n            <section className=\"section section--category-index\">\n                <h3>Index</h3>\n                <nav className=\"nav  nav--categories\">\n                    <ul className=\"list  list--categories\">\n                        {categories.map(category =>\n                            <li key={`category__link-${category}`} className=\"item  item--category\">\n                                <Link to={`/category/${category}`}>{category}</Link>\n                            </li>)}\n                    </ul>\n                </nav>\n            </section>\n        </aside>\n    )\n}\n\nexport default Index","import React from 'react'\n\nimport NavBar from '../common/NavBar'\nimport Index from './Index'\n\nconst Layout = ({ children }) => {\n    return (\n        <>\n            <NavBar />\n            <main className=\"main container\">\n                <Index />\n                {children}\n            </main>\n        </>\n    )\n}\n\nexport default Layout"],"sourceRoot":""}