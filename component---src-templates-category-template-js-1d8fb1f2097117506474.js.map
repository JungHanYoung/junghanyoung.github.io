{"version":3,"sources":["webpack:///./src/components/category/Layout.jsx","webpack:///./src/components/category/Content.jsx","webpack:///./src/templates/category-template.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/context/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/common/Search.jsx","webpack:///./src/components/common/NavBar.jsx","webpack:///./src/components/category/Index.jsx","webpack:///./src/components/footer.jsx","webpack:///./src/components/post-card.jsx","webpack:///./src/components/common/Pagination.jsx","webpack:///./src/components/seo.jsx"],"names":["Layout","_ref","children","categories","react_default","a","createElement","Fragment","NavBar","active","className","Index","footer","Content","_ref$posts","posts","title","map","post","post_card","Object","assign","key","id","Pagination","propTypes","PropTypes","arrayOf","shape","string","isRequired","category","date","excerpt","link","__webpack_require__","d","__webpack_exports__","query","CategoryTemplate","pageContext","data","location","postsInCategory","allMarkdownRemark","edges","edge","node","frontmatter","fields","slug","numPages","currentPage","paginationInfo","isFirst","isLast","prevPage","nextPage","context","Provider","value","category_Layout","seo","category_Content","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","object","func","m","module","exports","require","default","PaginationContext","LocationContext","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","Search","allPosts","_useState","useState","keyword","setKeyword","_useState2","searchResults","setSearchResults","useEffect","length","getPosts","filter","includes","placeholder","autoComplete","onChange","e","target","onBlur","gatsby_browser_entry","to","_ref$allPosts","_ref$active","style","position","cx","item--current","href","common_Search","gatsby__WEBPACK_IMPORTED_MODULE_1__","_ref$categories","borderRight","Footer","author","_public_static_d_2388669901_json__WEBPACK_IMPORTED_MODULE_0__","site","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","Date","getFullYear","PostCard","_ref$category","_ref$date","toUTCString","gatsby__WEBPACK_IMPORTED_MODULE_3__","_context__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_2__","_React$useContext","useContext","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","join","defaultProps","array"],"mappings":"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","file":"component---src-templates-category-template-js-1d8fb1f2097117506474.js","sourcesContent":["import React from 'react'\n\nimport NavBar from '../common/NavBar'\nimport Index from './Index'\nimport Footer from '../footer'\n\nconst Layout = ({ children, categories }) => {\n    return (\n        <>\n            <NavBar\n                active=\"category\"\n            />\n            <main className=\"main container\">\n                <Index\n                    categories={categories}\n                />\n                {children}\n            </main>\n            <Footer />\n        </>\n    )\n}\n\nexport default Layout","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// import PostCard from '../common/PostCard'\nimport PostCard from '../post-card'\nimport Pagination from '../common/Pagination';\n\nconst Content = ({ posts = [], title }) => {\n    return (\n        <div className=\"content typeset\">\n            <article className=\"article  article--page  typeset\">\n                <h2>{title}</h2>\n            </article>\n            <ul className=\"list  list--posts\">\n                {posts.map(post =>\n                    <PostCard\n                        key={post.id}\n                        {...post}\n                    />)}\n            </ul>\n            <Pagination />\n        </div>\n    )\n}\n\nContent.propTypes = {\n    posts: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        category: PropTypes.string,\n        date: PropTypes.string,\n        excerpt: PropTypes.string,\n        link: PropTypes.string.isRequired\n    })).isRequired,\n    title: PropTypes.string\n}\n\nexport default Content","import React from 'react'\n\nimport { PaginationContext, LocationContext } from '../context'\n\nimport Layout from '../components/category/Layout'\nimport Content from '../components/category/Content'\nimport { graphql } from 'gatsby';\nimport SEO from '../components/seo';\n\n\nconst CategoryTemplate = ({ pageContext, data, location }) => {\n\n    const postsInCategory = data.allMarkdownRemark.edges.map(edge => ({\n        id: edge.node.id,\n        title: edge.node.frontmatter.title,\n        category: edge.node.frontmatter.category,\n        date: edge.node.frontmatter.date,\n        excerpt: edge.node.excerpt,\n        link: edge.node.fields.slug\n    }))\n    const { category, categories, numPages, currentPage } = pageContext\n\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = category ?\n        currentPage - 1 === 1 ? `/category/${category}` : `/category/${category}/${currentPage - 1}`\n        : currentPage - 1 === 1 ? `/category` : `/category/${currentPage - 1}`\n    const nextPage = category ?\n        `/category/${category}/${currentPage + 1}`\n        : `/category/${currentPage + 1}`\n    const paginationInfo = {\n        isFirst,\n        isLast,\n        prevPage,\n        nextPage,\n        currentPage,\n        numPages\n    }\n\n\n    return (\n        <LocationContext.Provider value={location}>\n            <PaginationContext.Provider value={paginationInfo}>\n                <Layout\n                    categories={categories}\n                >\n                    <SEO title={`Devlog | Category${category ? ` - ${category}` : ''}`} />\n                    <Content\n                        posts={postsInCategory}\n                        title={category || 'general'}\n                    />\n                </Layout>\n            </PaginationContext.Provider>\n        </LocationContext.Provider>\n    )\n}\n\nexport const query = graphql`\n    query getPostsByCategory(\n        $category: String\n        $limit: Int!\n        $skip: Int!\n    ) {\n        allMarkdownRemark(\n            filter: { frontmatter: { category: {eq: $category}}}\n            sort: { fields: [frontmatter___date], order: DESC}\n            limit: $limit,\n            skip: $skip\n        ) {\n            edges { \n                node{\n                    id\n                    frontmatter {\n                        title\n                        date\n                    }\n                    excerpt\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport default CategoryTemplate","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { createContext } from 'react'\n\nexport const PaginationContext = createContext();\n\nexport const LocationContext = createContext();","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'gatsby'\n\nconst Search = ({ allPosts }) => {\n\n    const [keyword, setKeyword] = useState('')\n    const [searchResults, setSearchResults] = useState([])\n\n    useEffect(() => {\n        if (keyword.length > 2) {\n            const getPosts = allPosts.filter(post => post.title.includes(keyword))\n            setSearchResults(getPosts)\n        } else {\n            setSearchResults([])\n        }\n    }, [keyword])\n\n    return (\n        <>\n            <input\n                className=\"search-input\"\n                placeholder=\"Search\"\n                autoComplete=\"off\"\n                value={keyword}\n                onChange={e => setKeyword(e.target.value)}\n                onBlur={() => {\n                    setKeyword('')\n                }}\n            />\n            <ul className=\"search--results\" >\n                {searchResults.map(post =>\n                    <li\n                        key={post.id}\n                        className=\"search--result\"\n                    >\n                        <Link to={post.link}>\n                            <article className=\"search--result-article\">\n                                <div className=\"search--result-article-title\">\n                                    <h3>{post.title}</h3>\n                                    <span className=\"date\">{post.date}</span>\n                                </div>\n                                <p>{post.excerpt}</p>\n                            </article>\n                        </Link>\n                    </li>\n                )}\n            </ul>\n        </>\n    )\n}\n\nexport default Search","import React from 'react'\nimport { Link } from 'gatsby';\nimport cx from 'classnames'\n\nimport Search from './Search'\n\nconst NavBar = ({ allPosts = [], active = \"\" }) => {\n    return (\n        <header className=\"header\">\n            <div className=\"container\">\n                <Link className=\"logo\" to=\"/\">\n                    DevLog\n                </Link>\n                <ul className=\"list list--nav\" style={{\n                    position: \"relative\"\n                }}>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"home\" })}>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"about\" })}>\n                        <Link to=\"/about\">About</Link>\n                    </li>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"category\" })}>\n                        <Link to=\"/category\">Category</Link>\n                    </li>\n                    <li className={cx(\"item\", \"item--nav\", { \"item--current\": active === \"tags\" })}>\n                        <Link to=\"/tags\">Tags</Link>\n                    </li>\n                    <li className=\"item item--nav\">\n                        <a href=\"/TIL\">TIL</a>\n                    </li>\n                    <li className=\"item  item--nav\">\n                        <Search\n                            allPosts={allPosts}\n                        />\n                    </li>\n                </ul>\n            </div>\n        </header>\n    )\n}\n\nexport default NavBar","import React from 'react'\nimport { Link } from 'gatsby';\n\nconst Index = ({ categories = [\"TIL\"] }) => {\n    return (\n        <aside className=\"aside typeset aside--left\" style={{ borderRight: \"1px solid #a8adac\" }}>\n            <section className=\"section section--category-index\">\n                <h3>Index</h3>\n                <nav className=\"nav  nav--categories\">\n                    <ul className=\"list  list--categories\">\n                        {categories.map(category =>\n                            category === \"general\" ?\n                                <li key={`category__link-${category}`} className=\"item  item--category\">\n                                    <Link to={`/category`}>{category}</Link>\n                                </li> :\n                                <li key={`category__link-${category}`} className=\"item  item--category\">\n                                    <Link to={`/category/${category}`}>{category}</Link>\n                                </li>\n                        )}\n                    </ul>\n                </nav>\n            </section>\n        </aside>\n    )\n}\n\nexport default Index","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst Footer = () => {\n\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    author\n                }\n            }\n        }\n    `)\n\n    const author = data.site.siteMetadata.author\n    return (\n        <footer className=\"footer\">\n            <div className=\"container\">\n                <div className=\"copyright typeset\">\n                    <small className=\"small\">© {new Date().getFullYear()}, Built with</small>\n                </div>\n                <nav className=\"nav  nav--footer\">\n                    <ul className=\"list list-nav\">\n                        <li className=\"item  item--nav\">\n                            {author}\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\n\nconst PostCard = ({ title, category = \"general\", date = new Date().toUTCString(), excerpt, link }) => {\n    return (\n        <li className=\"item  item--post\">\n            <article className=\"article  article--post\">\n                <Link to={link}>\n                    <h2>{title}</h2>\n                </Link>\n                <small className=\"small  post-meta\">\n                    <span className=\"label  label--category\">\n                        {category ?\n                            <Link to={`/category/${category}`}>{category}</Link>\n                            :\n                            <Link to={`/category`}>general</Link>\n                        }\n                    </span>\n                    &nbsp; &nbsp;\n                        <span className=\"time\">{date}</span>\n                </small>\n                <p>{excerpt}</p>\n            </article>\n        </li>\n    )\n}\n\nPostCard.propTypes = {\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string,\n    date: PropTypes.string,\n    excerpt: PropTypes.string,\n    link: PropTypes.string.isRequired\n}\n\nexport default PostCard","import React from 'react'\n\nimport { PaginationContext } from '../../context'\nimport { Link } from 'gatsby';\n\nconst Pagination = () => {\n\n    const {\n        isFirst,\n        isLast,\n        prevPage,\n        nextPage,\n        currentPage,\n        numPages\n    } = React.useContext(PaginationContext)\n\n    return (\n        <nav className=\"nav  nav--paginator\">\n            {isFirst ?\n                <span className=\"pagination  pagination--previous\">Previous</span>\n                : <Link to={prevPage} className=\"pagination  pagination--previous\">Previous</Link>\n            }\n            <span className=\"pagination  pagination--counter\">{`Page: ${currentPage} of ${numPages}`}</span>\n            {isLast ?\n                <span className=\"pagination  pagination--next\">Next</span>\n                : <Link to={nextPage} className=\"pagination  pagination--next\">Next</Link>\n            }\n        </nav>\n    )\n}\n\nexport default Pagination","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}